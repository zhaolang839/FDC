{"env_info": "sys.platform: linux\nPython: 3.6.9 (default, Jan 26 2021, 15:33:00) [GCC 8.4.0]\nCUDA available: True\nGPU 0: Tesla V100-SXM2-16GB\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 10.2, V10.2.89\nGCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\nPyTorch: 1.8.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 10.2\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70\n  - CuDNN 7.6.5\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.9.0\nOpenCV: 4.4.0\nMMCV: 1.3.7\nMMCV Compiler: GCC 7.5\nMMCV CUDA Compiler: 10.2\nMMSegmentation: 0.16.0+6d87ab8", "seed": 1, "exp_name": "230719_0652_syn2cs_dacs_a999_fdthings_rcs001_cpl_daformer_sepaspp_mitb5_poly10warm_s1_6639e", "mmseg_version": "0.16.0+6d87ab8", "config": "log_config = dict(\n    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\ncudnn_benchmark = True\nnorm_cfg = dict(type='BN', requires_grad=True)\nfind_unused_parameters = True\nmodel = dict(\n    type='EncoderDecoder',\n    pretrained='pretrained/mit_b5.pth',\n    backbone=dict(type='mit_b5', style='pytorch'),\n    decode_head=dict(\n        type='DAFormerHead',\n        in_channels=[64, 128, 320, 512],\n        in_index=[0, 1, 2, 3],\n        channels=256,\n        dropout_ratio=0.1,\n        num_classes=19,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        align_corners=False,\n        decoder_params=dict(\n            embed_dims=256,\n            embed_cfg=dict(type='mlp', act_cfg=None, norm_cfg=None),\n            embed_neck_cfg=dict(type='mlp', act_cfg=None, norm_cfg=None),\n            fusion_cfg=dict(\n                type='aspp',\n                sep=True,\n                dilations=(1, 6, 12, 18),\n                pool=False,\n                act_cfg=dict(type='ReLU'),\n                norm_cfg=dict(type='BN', requires_grad=True))),\n        loss_decode=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),\n    train_cfg=dict(\n        work_dir=\n        'work_dirs/local-exp7/230719_0652_syn2cs_dacs_a999_fdthings_rcs001_cpl_daformer_sepaspp_mitb5_poly10warm_s1_6639e'\n    ),\n    test_cfg=dict(mode='whole'))\ndataset_type = 'CityscapesDataset'\ndata_root = 'data/cityscapes/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ncrop_size = (512, 512)\nsynthia_train_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations'),\n    dict(type='Resize', img_scale=(1280, 760)),\n    dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),\n    dict(type='RandomFlip', prob=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n]\ncityscapes_train_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations'),\n    dict(type='Resize', img_scale=(1024, 512)),\n    dict(type='RandomCrop', crop_size=(512, 512)),\n    dict(type='RandomFlip', prob=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1024, 512),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=4,\n    train=dict(\n        type='UDADataset',\n        source=dict(\n            type='SynthiaDataset',\n            data_root='data/synthia/',\n            img_dir='RGB',\n            ann_dir='GT/LABELS',\n            pipeline=[\n                dict(type='LoadImageFromFile'),\n                dict(type='LoadAnnotations'),\n                dict(type='Resize', img_scale=(1280, 760)),\n                dict(\n                    type='RandomCrop',\n                    crop_size=(512, 512),\n                    cat_max_ratio=0.75),\n                dict(type='RandomFlip', prob=0.5),\n                dict(\n                    type='Normalize',\n                    mean=[123.675, 116.28, 103.53],\n                    std=[58.395, 57.12, 57.375],\n                    to_rgb=True),\n                dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),\n                dict(type='DefaultFormatBundle'),\n                dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n            ]),\n        target=dict(\n            type='CityscapesDataset',\n            data_root='data/cityscapes/',\n            img_dir='leftImg8bit/train',\n            ann_dir='gtFine/train',\n            pipeline=[\n                dict(type='LoadImageFromFile'),\n                dict(type='LoadAnnotations'),\n                dict(type='Resize', img_scale=(1024, 512)),\n                dict(type='RandomCrop', crop_size=(512, 512)),\n                dict(type='RandomFlip', prob=0.5),\n                dict(\n                    type='Normalize',\n                    mean=[123.675, 116.28, 103.53],\n                    std=[58.395, 57.12, 57.375],\n                    to_rgb=True),\n                dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),\n                dict(type='DefaultFormatBundle'),\n                dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n            ]),\n        rare_class_sampling=dict(\n            min_pixels=3000, class_temp=0.01, min_crop_ratio=0.5)),\n    val=dict(\n        type='CityscapesDataset',\n        data_root='data/cityscapes/',\n        img_dir='leftImg8bit/val',\n        ann_dir='gtFine/val',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1024, 512),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='CityscapesDataset',\n        data_root='data/cityscapes/',\n        img_dir='leftImg8bit/val',\n        ann_dir='gtFine/val',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1024, 512),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nuda = dict(\n    type='DACS',\n    alpha=0.999,\n    pseudo_threshold=0.968,\n    pseudo_weight_ignore_top=15,\n    pseudo_weight_ignore_bottom=120,\n    imnet_feature_dist_lambda=0.005,\n    imnet_feature_dist_classes=[6, 7, 11, 12, 13, 14, 15, 16, 17, 18],\n    imnet_feature_dist_scale_min_ratio=0.75,\n    mix='class',\n    blur=True,\n    color_jitter_strength=0.2,\n    color_jitter_probability=0.2,\n    debug_img_interval=1000,\n    print_grad_magnitude=False,\n    tar_aug='',\n    weight=1,\n    dropout=0.5,\n    thre='same',\n    bata=0.2,\n    gamar=-2,\n    model=dict(\n        type='EncoderDecoder',\n        pretrained='pretrained/mit_b5.pth',\n        backbone=dict(type='mit_b5', style='pytorch'),\n        decode_head=dict(\n            type='DAFormerHead',\n            in_channels=[64, 128, 320, 512],\n            in_index=[0, 1, 2, 3],\n            channels=256,\n            dropout_ratio=0.1,\n            num_classes=19,\n            norm_cfg=dict(type='BN', requires_grad=True),\n            align_corners=False,\n            decoder_params=dict(\n                embed_dims=256,\n                embed_cfg=dict(type='mlp', act_cfg=None, norm_cfg=None),\n                embed_neck_cfg=dict(type='mlp', act_cfg=None, norm_cfg=None),\n                fusion_cfg=dict(\n                    type='aspp',\n                    sep=True,\n                    dilations=(1, 6, 12, 18),\n                    pool=False,\n                    act_cfg=dict(type='ReLU'),\n                    norm_cfg=dict(type='BN', requires_grad=True))),\n            loss_decode=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),\n        train_cfg=dict(\n            work_dir=\n            'work_dirs/local-exp7/230719_0652_syn2cs_dacs_a999_fdthings_rcs001_cpl_daformer_sepaspp_mitb5_poly10warm_s1_6639e'\n        ),\n        test_cfg=dict(mode='whole')),\n    max_iters=40000)\nuse_ddp_wrapper = True\noptimizer = dict(\n    type='AdamW',\n    lr=6e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.01,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            head=dict(lr_mult=10.0),\n            pos_block=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = None\nlr_config = dict(\n    policy='poly',\n    warmup='linear',\n    warmup_iters=1500,\n    warmup_ratio=1e-06,\n    power=1.0,\n    min_lr=0.0,\n    by_epoch=False)\nn_gpus = 1\nseed = 1\nrunner = dict(type='IterBasedRunner', max_iters=40000)\ncheckpoint_config = dict(by_epoch=False, interval=40000, max_keep_ckpts=1)\nevaluation = dict(interval=4000, metric='mIoU')\nname = '230719_0652_syn2cs_dacs_a999_fdthings_rcs001_cpl_daformer_sepaspp_mitb5_poly10warm_s1_6639e'\nexp = 7\nname_dataset = 'synthia2cityscapes'\nname_architecture = 'daformer_sepaspp_mitb5'\nname_encoder = 'mitb5'\nname_decoder = 'daformer_sepaspp'\nname_uda = 'dacs_a999_fdthings_rcs0.01_cpl'\nname_opt = 'adamw_6e-05_pmTrue_poly10warm_1x2_40k'\nwork_dir = 'work_dirs/local-exp7/230719_0652_syn2cs_dacs_a999_fdthings_rcs001_cpl_daformer_sepaspp_mitb5_poly10warm_s1_6639e'\ngit_rev = '6d87ab857665f3c5a4b481c1da3fb5e227792830'\ngpu_ids = range(0, 1)\n", "CLASSES": ["road", "sidewalk", "building", "wall", "fence", "pole", "traffic light", "traffic sign", "vegetation", "terrain", "sky", "person", "rider", "car", "truck", "bus", "train", "motorcycle", "bicycle"], "PALETTE": [[128, 64, 128], [244, 35, 232], [70, 70, 70], [102, 102, 156], [190, 153, 153], [153, 153, 153], [250, 170, 30], [220, 220, 0], [107, 142, 35], [152, 251, 152], [70, 130, 180], [220, 20, 60], [255, 0, 0], [0, 0, 142], [0, 0, 70], [0, 60, 100], [0, 80, 100], [0, 0, 230], [119, 11, 32]]}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0, "memory": 9832, "data_time": 0.0433, "decode.loss_seg": 2.75273, "decode.acc_seg": 9.17867, "src.loss_imnet_feat_dist": 0.06789, "mix.decode.loss_seg": 1.45141, "mix.decode.acc_seg": 13.69052, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 18.52194, "time": 1.39286}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.0, "memory": 9832, "data_time": 0.02145, "decode.loss_seg": 2.55533, "decode.acc_seg": 44.50031, "src.loss_imnet_feat_dist": 0.06697, "mix.decode.loss_seg": 1.25968, "mix.decode.acc_seg": 32.72256, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 24.62737, "time": 1.32771}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 1e-05, "memory": 9832, "data_time": 0.02096, "decode.loss_seg": 2.12924, "decode.acc_seg": 60.14337, "src.loss_imnet_feat_dist": 0.08353, "mix.decode.loss_seg": 1.12734, "mix.decode.acc_seg": 52.05864, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 49.02484, "time": 1.3285}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 1e-05, "memory": 9832, "data_time": 0.02121, "decode.loss_seg": 1.68093, "decode.acc_seg": 66.46687, "src.loss_imnet_feat_dist": 0.09868, "mix.decode.loss_seg": 0.88529, "mix.decode.acc_seg": 61.93875, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 67.2926, "time": 1.33013}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 1e-05, "memory": 9832, "data_time": 0.02172, "decode.loss_seg": 1.37973, "decode.acc_seg": 70.01593, "src.loss_imnet_feat_dist": 0.10411, "mix.decode.loss_seg": 0.64159, "mix.decode.acc_seg": 65.22165, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 74.73222, "time": 1.3311}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 1e-05, "memory": 9832, "data_time": 0.02216, "decode.loss_seg": 1.12655, "decode.acc_seg": 73.96741, "src.loss_imnet_feat_dist": 0.10539, "mix.decode.loss_seg": 0.54215, "mix.decode.acc_seg": 68.79265, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 76.86612, "time": 1.33837}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 1e-05, "memory": 9832, "data_time": 0.02163, "decode.loss_seg": 0.97718, "decode.acc_seg": 74.27619, "src.loss_imnet_feat_dist": 0.11672, "mix.decode.loss_seg": 0.50671, "mix.decode.acc_seg": 67.49154, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 77.88934, "time": 1.33073}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 2e-05, "memory": 9832, "data_time": 0.0215, "decode.loss_seg": 0.87708, "decode.acc_seg": 74.80843, "src.loss_imnet_feat_dist": 0.11383, "mix.decode.loss_seg": 0.42423, "mix.decode.acc_seg": 67.97043, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 77.00489, "time": 1.33145}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 2e-05, "memory": 9832, "data_time": 0.02135, "decode.loss_seg": 0.75325, "decode.acc_seg": 76.7861, "src.loss_imnet_feat_dist": 0.12335, "mix.decode.loss_seg": 0.40192, "mix.decode.acc_seg": 68.25144, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 76.56377, "time": 1.32836}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 2e-05, "memory": 9832, "data_time": 0.02187, "decode.loss_seg": 0.69311, "decode.acc_seg": 77.45333, "src.loss_imnet_feat_dist": 0.11418, "mix.decode.loss_seg": 0.38276, "mix.decode.acc_seg": 70.92482, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 80.56329, "time": 1.33085}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 2e-05, "memory": 9832, "data_time": 0.02209, "decode.loss_seg": 0.64114, "decode.acc_seg": 78.16149, "src.loss_imnet_feat_dist": 0.12061, "mix.decode.loss_seg": 0.3323, "mix.decode.acc_seg": 67.6159, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 77.77471, "time": 1.33143}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 2e-05, "memory": 9832, "data_time": 0.02168, "decode.loss_seg": 0.59185, "decode.acc_seg": 79.42675, "src.loss_imnet_feat_dist": 0.11951, "mix.decode.loss_seg": 0.31605, "mix.decode.acc_seg": 70.23429, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 78.73549, "time": 1.32981}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 3e-05, "memory": 9832, "data_time": 0.02179, "decode.loss_seg": 0.52675, "decode.acc_seg": 81.1834, "src.loss_imnet_feat_dist": 0.11463, "mix.decode.loss_seg": 0.24135, "mix.decode.acc_seg": 70.89011, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 79.37576, "time": 1.33105}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 3e-05, "memory": 9832, "data_time": 0.02135, "decode.loss_seg": 0.50298, "decode.acc_seg": 81.66187, "src.loss_imnet_feat_dist": 0.12127, "mix.decode.loss_seg": 0.28221, "mix.decode.acc_seg": 70.30235, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 77.87322, "time": 1.32928}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 3e-05, "memory": 9832, "data_time": 0.02162, "decode.loss_seg": 0.45622, "decode.acc_seg": 82.41718, "src.loss_imnet_feat_dist": 0.11628, "mix.decode.loss_seg": 0.21721, "mix.decode.acc_seg": 70.92219, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 79.93625, "time": 1.33049}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 3e-05, "memory": 9832, "data_time": 0.02141, "decode.loss_seg": 0.43089, "decode.acc_seg": 81.83155, "src.loss_imnet_feat_dist": 0.129, "mix.decode.loss_seg": 0.23336, "mix.decode.acc_seg": 72.36311, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 77.13735, "time": 1.33217}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 3e-05, "memory": 9832, "data_time": 0.02171, "decode.loss_seg": 0.41407, "decode.acc_seg": 84.23164, "src.loss_imnet_feat_dist": 0.12433, "mix.decode.loss_seg": 0.21506, "mix.decode.acc_seg": 71.08332, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 76.70288, "time": 1.33352}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 4e-05, "memory": 9832, "data_time": 0.02159, "decode.loss_seg": 0.44884, "decode.acc_seg": 81.68314, "src.loss_imnet_feat_dist": 0.12509, "mix.decode.loss_seg": 0.21219, "mix.decode.acc_seg": 70.6325, "consistency.decode.loss_seg": 1e-05, "consistency.decode.acc_seg": 73.03655, "time": 1.33566}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 4e-05, "memory": 9832, "data_time": 0.02196, "decode.loss_seg": 0.38591, "decode.acc_seg": 84.20846, "src.loss_imnet_feat_dist": 0.1271, "mix.decode.loss_seg": 0.21339, "mix.decode.acc_seg": 73.63979, "consistency.decode.loss_seg": 2e-05, "consistency.decode.acc_seg": 79.13706, "time": 1.33296}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 4e-05, "memory": 9832, "data_time": 0.0227, "decode.loss_seg": 0.35047, "decode.acc_seg": 84.90758, "src.loss_imnet_feat_dist": 0.1199, "mix.decode.loss_seg": 0.20321, "mix.decode.acc_seg": 73.99759, "consistency.decode.loss_seg": 1e-05, "consistency.decode.acc_seg": 77.57225, "time": 1.33856}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 4e-05, "memory": 9832, "data_time": 0.02186, "decode.loss_seg": 0.33767, "decode.acc_seg": 84.36668, "src.loss_imnet_feat_dist": 0.11806, "mix.decode.loss_seg": 0.20684, "mix.decode.acc_seg": 74.20404, "consistency.decode.loss_seg": 1e-05, "consistency.decode.acc_seg": 82.39994, "time": 1.36376}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 4e-05, "memory": 9832, "data_time": 0.02154, "decode.loss_seg": 0.33451, "decode.acc_seg": 84.21028, "src.loss_imnet_feat_dist": 0.12203, "mix.decode.loss_seg": 0.18198, "mix.decode.acc_seg": 75.28979, "consistency.decode.loss_seg": 3e-05, "consistency.decode.acc_seg": 82.71904, "time": 1.33137}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 4e-05, "memory": 9832, "data_time": 0.02191, "decode.loss_seg": 0.40617, "decode.acc_seg": 82.93183, "src.loss_imnet_feat_dist": 0.1307, "mix.decode.loss_seg": 0.27768, "mix.decode.acc_seg": 72.13948, "consistency.decode.loss_seg": 4e-05, "consistency.decode.acc_seg": 80.96784, "time": 1.33759}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 5e-05, "memory": 9832, "data_time": 0.02186, "decode.loss_seg": 0.35175, "decode.acc_seg": 84.25981, "src.loss_imnet_feat_dist": 0.13002, "mix.decode.loss_seg": 0.20682, "mix.decode.acc_seg": 76.04474, "consistency.decode.loss_seg": 6e-05, "consistency.decode.acc_seg": 79.76139, "time": 1.33583}
{"mode": "train", "epoch": 1, "iter": 1250, "lr": 5e-05, "memory": 9832, "data_time": 0.02201, "decode.loss_seg": 0.31456, "decode.acc_seg": 86.04819, "src.loss_imnet_feat_dist": 0.12627, "mix.decode.loss_seg": 0.19048, "mix.decode.acc_seg": 76.33867, "consistency.decode.loss_seg": 8e-05, "consistency.decode.acc_seg": 81.31705, "time": 1.33815}
{"mode": "train", "epoch": 1, "iter": 1300, "lr": 5e-05, "memory": 9832, "data_time": 0.02154, "decode.loss_seg": 0.34954, "decode.acc_seg": 85.15034, "src.loss_imnet_feat_dist": 0.13205, "mix.decode.loss_seg": 0.22215, "mix.decode.acc_seg": 77.44155, "consistency.decode.loss_seg": 6e-05, "consistency.decode.acc_seg": 83.1175, "time": 1.33688}
{"mode": "train", "epoch": 1, "iter": 1350, "lr": 5e-05, "memory": 9832, "data_time": 0.0257, "decode.loss_seg": 0.314, "decode.acc_seg": 85.89665, "src.loss_imnet_feat_dist": 0.12879, "mix.decode.loss_seg": 0.19358, "mix.decode.acc_seg": 77.09179, "consistency.decode.loss_seg": 0.00023, "consistency.decode.acc_seg": 83.66564, "time": 1.36107}
{"mode": "train", "epoch": 1, "iter": 1400, "lr": 5e-05, "memory": 9832, "data_time": 0.02297, "decode.loss_seg": 0.30489, "decode.acc_seg": 85.15628, "src.loss_imnet_feat_dist": 0.12749, "mix.decode.loss_seg": 0.20986, "mix.decode.acc_seg": 75.62927, "consistency.decode.loss_seg": 0.00055, "consistency.decode.acc_seg": 79.05598, "time": 1.36202}
{"mode": "train", "epoch": 1, "iter": 1450, "lr": 6e-05, "memory": 9832, "data_time": 0.02432, "decode.loss_seg": 0.35117, "decode.acc_seg": 84.27539, "src.loss_imnet_feat_dist": 0.13162, "mix.decode.loss_seg": 0.2757, "mix.decode.acc_seg": 74.78487, "consistency.decode.loss_seg": 0.00033, "consistency.decode.acc_seg": 81.66969, "time": 1.35753}
{"mode": "train", "epoch": 1, "iter": 1500, "lr": 6e-05, "memory": 9832, "data_time": 0.02373, "decode.loss_seg": 0.36126, "decode.acc_seg": 83.91458, "src.loss_imnet_feat_dist": 0.14, "mix.decode.loss_seg": 0.24457, "mix.decode.acc_seg": 78.18015, "consistency.decode.loss_seg": 0.00043, "consistency.decode.acc_seg": 81.89422, "time": 1.34648}
{"mode": "train", "epoch": 1, "iter": 1550, "lr": 6e-05, "memory": 9832, "data_time": 0.02171, "decode.loss_seg": 0.28543, "decode.acc_seg": 86.67852, "src.loss_imnet_feat_dist": 0.12612, "mix.decode.loss_seg": 0.18883, "mix.decode.acc_seg": 79.05714, "consistency.decode.loss_seg": 0.00029, "consistency.decode.acc_seg": 84.73384, "time": 1.33646}
{"mode": "train", "epoch": 1, "iter": 1600, "lr": 6e-05, "memory": 9832, "data_time": 0.02294, "decode.loss_seg": 0.28355, "decode.acc_seg": 85.91685, "src.loss_imnet_feat_dist": 0.1309, "mix.decode.loss_seg": 0.18842, "mix.decode.acc_seg": 79.07398, "consistency.decode.loss_seg": 0.00039, "consistency.decode.acc_seg": 85.40301, "time": 1.34504}
{"mode": "train", "epoch": 1, "iter": 1650, "lr": 6e-05, "memory": 9832, "data_time": 0.02241, "decode.loss_seg": 0.27317, "decode.acc_seg": 86.55608, "src.loss_imnet_feat_dist": 0.12826, "mix.decode.loss_seg": 0.21113, "mix.decode.acc_seg": 78.94961, "consistency.decode.loss_seg": 0.00068, "consistency.decode.acc_seg": 85.22914, "time": 1.34418}
{"mode": "train", "epoch": 1, "iter": 1700, "lr": 6e-05, "memory": 9832, "data_time": 0.0243, "decode.loss_seg": 0.30252, "decode.acc_seg": 85.12257, "src.loss_imnet_feat_dist": 0.13093, "mix.decode.loss_seg": 0.23375, "mix.decode.acc_seg": 79.4896, "consistency.decode.loss_seg": 0.00098, "consistency.decode.acc_seg": 84.12949, "time": 1.35029}
{"mode": "train", "epoch": 1, "iter": 1750, "lr": 6e-05, "memory": 9832, "data_time": 0.02396, "decode.loss_seg": 0.24861, "decode.acc_seg": 85.82856, "src.loss_imnet_feat_dist": 0.13209, "mix.decode.loss_seg": 0.17425, "mix.decode.acc_seg": 81.23468, "consistency.decode.loss_seg": 0.00064, "consistency.decode.acc_seg": 86.4047, "time": 1.35057}
{"mode": "train", "epoch": 1, "iter": 1800, "lr": 6e-05, "memory": 9832, "data_time": 0.0232, "decode.loss_seg": 0.2519, "decode.acc_seg": 87.416, "src.loss_imnet_feat_dist": 0.12824, "mix.decode.loss_seg": 0.20123, "mix.decode.acc_seg": 81.69529, "consistency.decode.loss_seg": 0.00071, "consistency.decode.acc_seg": 87.50604, "time": 1.34152}
{"mode": "train", "epoch": 1, "iter": 1850, "lr": 6e-05, "memory": 9832, "data_time": 0.02327, "decode.loss_seg": 0.24465, "decode.acc_seg": 87.19034, "src.loss_imnet_feat_dist": 0.1211, "mix.decode.loss_seg": 0.1995, "mix.decode.acc_seg": 81.86274, "consistency.decode.loss_seg": 0.00092, "consistency.decode.acc_seg": 88.53741, "time": 1.34334}
{"mode": "train", "epoch": 1, "iter": 1900, "lr": 6e-05, "memory": 9832, "data_time": 0.02333, "decode.loss_seg": 0.2499, "decode.acc_seg": 86.21444, "src.loss_imnet_feat_dist": 0.12226, "mix.decode.loss_seg": 0.19599, "mix.decode.acc_seg": 81.01199, "consistency.decode.loss_seg": 0.00094, "consistency.decode.acc_seg": 87.31333, "time": 1.34801}
{"mode": "train", "epoch": 1, "iter": 1950, "lr": 6e-05, "memory": 9832, "data_time": 0.02378, "decode.loss_seg": 0.22461, "decode.acc_seg": 86.36026, "src.loss_imnet_feat_dist": 0.12694, "mix.decode.loss_seg": 0.1827, "mix.decode.acc_seg": 82.14801, "consistency.decode.loss_seg": 0.0008, "consistency.decode.acc_seg": 88.39191, "time": 1.34898}
{"mode": "train", "epoch": 1, "iter": 2000, "lr": 6e-05, "memory": 9832, "data_time": 0.02311, "decode.loss_seg": 0.22064, "decode.acc_seg": 88.38777, "src.loss_imnet_feat_dist": 0.13055, "mix.decode.loss_seg": 0.17983, "mix.decode.acc_seg": 83.58121, "consistency.decode.loss_seg": 0.00108, "consistency.decode.acc_seg": 88.49913, "time": 1.34298}
{"mode": "train", "epoch": 1, "iter": 2050, "lr": 6e-05, "memory": 9832, "data_time": 0.02265, "decode.loss_seg": 0.23284, "decode.acc_seg": 87.42963, "src.loss_imnet_feat_dist": 0.12037, "mix.decode.loss_seg": 0.22428, "mix.decode.acc_seg": 81.19493, "consistency.decode.loss_seg": 0.00141, "consistency.decode.acc_seg": 85.2428, "time": 1.37825}
{"mode": "train", "epoch": 1, "iter": 2100, "lr": 6e-05, "memory": 9832, "data_time": 0.02376, "decode.loss_seg": 0.25717, "decode.acc_seg": 86.87056, "src.loss_imnet_feat_dist": 0.13169, "mix.decode.loss_seg": 0.23905, "mix.decode.acc_seg": 81.69846, "consistency.decode.loss_seg": 0.00823, "consistency.decode.acc_seg": 85.67225, "time": 1.34204}
{"mode": "train", "epoch": 1, "iter": 2150, "lr": 6e-05, "memory": 9832, "data_time": 0.02298, "decode.loss_seg": 0.27962, "decode.acc_seg": 87.05652, "src.loss_imnet_feat_dist": 0.12885, "mix.decode.loss_seg": 0.23707, "mix.decode.acc_seg": 81.87744, "consistency.decode.loss_seg": 0.00296, "consistency.decode.acc_seg": 86.65535, "time": 1.33732}
{"mode": "train", "epoch": 1, "iter": 2200, "lr": 6e-05, "memory": 9832, "data_time": 0.02315, "decode.loss_seg": 0.27721, "decode.acc_seg": 85.69883, "src.loss_imnet_feat_dist": 0.13471, "mix.decode.loss_seg": 0.22218, "mix.decode.acc_seg": 83.3936, "consistency.decode.loss_seg": 0.00299, "consistency.decode.acc_seg": 86.25667, "time": 1.34126}
{"mode": "train", "epoch": 1, "iter": 2250, "lr": 6e-05, "memory": 9832, "data_time": 0.02291, "decode.loss_seg": 0.22387, "decode.acc_seg": 88.24926, "src.loss_imnet_feat_dist": 0.12511, "mix.decode.loss_seg": 0.21346, "mix.decode.acc_seg": 83.8672, "consistency.decode.loss_seg": 0.00252, "consistency.decode.acc_seg": 87.79441, "time": 1.34549}
{"mode": "train", "epoch": 1, "iter": 2300, "lr": 6e-05, "memory": 9832, "data_time": 0.02285, "decode.loss_seg": 0.23634, "decode.acc_seg": 88.21505, "src.loss_imnet_feat_dist": 0.12505, "mix.decode.loss_seg": 0.20675, "mix.decode.acc_seg": 84.79082, "consistency.decode.loss_seg": 0.00177, "consistency.decode.acc_seg": 88.78865, "time": 1.33719}
{"mode": "train", "epoch": 1, "iter": 2350, "lr": 6e-05, "memory": 9832, "data_time": 0.02233, "decode.loss_seg": 0.21879, "decode.acc_seg": 87.9008, "src.loss_imnet_feat_dist": 0.12564, "mix.decode.loss_seg": 0.19946, "mix.decode.acc_seg": 83.76889, "consistency.decode.loss_seg": 0.00136, "consistency.decode.acc_seg": 89.45113, "time": 1.33859}
{"mode": "train", "epoch": 1, "iter": 2400, "lr": 6e-05, "memory": 9832, "data_time": 0.02202, "decode.loss_seg": 0.24583, "decode.acc_seg": 87.10155, "src.loss_imnet_feat_dist": 0.12772, "mix.decode.loss_seg": 0.28539, "mix.decode.acc_seg": 82.11765, "consistency.decode.loss_seg": 0.00482, "consistency.decode.acc_seg": 87.83571, "time": 1.33851}
{"mode": "train", "epoch": 1, "iter": 2450, "lr": 6e-05, "memory": 9832, "data_time": 0.02389, "decode.loss_seg": 0.24258, "decode.acc_seg": 86.85489, "src.loss_imnet_feat_dist": NaN, "mix.decode.loss_seg": 0.2258, "mix.decode.acc_seg": 83.47871, "consistency.decode.loss_seg": 0.00294, "consistency.decode.acc_seg": 89.35044, "time": 1.34986}
{"mode": "train", "epoch": 1, "iter": 2500, "lr": 6e-05, "memory": 9832, "data_time": 0.02351, "decode.loss_seg": 0.2314, "decode.acc_seg": 87.67472, "src.loss_imnet_feat_dist": 0.1268, "mix.decode.loss_seg": 0.22835, "mix.decode.acc_seg": 84.22998, "consistency.decode.loss_seg": 0.0022, "consistency.decode.acc_seg": 89.95951, "time": 1.34534}
{"mode": "train", "epoch": 1, "iter": 2550, "lr": 6e-05, "memory": 9832, "data_time": 0.02409, "decode.loss_seg": 0.22691, "decode.acc_seg": 86.88091, "src.loss_imnet_feat_dist": 0.12045, "mix.decode.loss_seg": 0.22268, "mix.decode.acc_seg": 83.31469, "consistency.decode.loss_seg": 0.00347, "consistency.decode.acc_seg": 89.86827, "time": 1.34268}
{"mode": "train", "epoch": 1, "iter": 2600, "lr": 6e-05, "memory": 9832, "data_time": 0.0235, "decode.loss_seg": 0.21703, "decode.acc_seg": 87.57222, "src.loss_imnet_feat_dist": 0.1237, "mix.decode.loss_seg": 0.22663, "mix.decode.acc_seg": 83.93144, "consistency.decode.loss_seg": 0.00231, "consistency.decode.acc_seg": 90.25414, "time": 1.34463}
{"mode": "train", "epoch": 1, "iter": 2650, "lr": 6e-05, "memory": 9832, "data_time": 0.02246, "decode.loss_seg": 0.25273, "decode.acc_seg": 87.3458, "src.loss_imnet_feat_dist": 0.12805, "mix.decode.loss_seg": 0.25442, "mix.decode.acc_seg": 83.83432, "consistency.decode.loss_seg": 0.00377, "consistency.decode.acc_seg": 88.7353, "time": 1.33437}
{"mode": "train", "epoch": 1, "iter": 2700, "lr": 6e-05, "memory": 9832, "data_time": 0.02353, "decode.loss_seg": 0.2293, "decode.acc_seg": 87.07223, "src.loss_imnet_feat_dist": 0.1247, "mix.decode.loss_seg": 0.2213, "mix.decode.acc_seg": 85.18413, "consistency.decode.loss_seg": 0.00264, "consistency.decode.acc_seg": 90.04162, "time": 1.34794}
{"mode": "train", "epoch": 1, "iter": 2750, "lr": 6e-05, "memory": 9832, "data_time": 0.02317, "decode.loss_seg": 0.19401, "decode.acc_seg": 87.84216, "src.loss_imnet_feat_dist": 0.12726, "mix.decode.loss_seg": 0.18189, "mix.decode.acc_seg": 86.75619, "consistency.decode.loss_seg": 0.00189, "consistency.decode.acc_seg": 91.97348, "time": 1.33888}
{"mode": "train", "epoch": 1, "iter": 2800, "lr": 6e-05, "memory": 9832, "data_time": 0.02236, "decode.loss_seg": 0.19814, "decode.acc_seg": 88.70913, "src.loss_imnet_feat_dist": 0.12834, "mix.decode.loss_seg": 0.18615, "mix.decode.acc_seg": 86.42476, "consistency.decode.loss_seg": 0.00173, "consistency.decode.acc_seg": 91.49837, "time": 1.33709}
{"mode": "train", "epoch": 1, "iter": 2850, "lr": 6e-05, "memory": 9832, "data_time": 0.02235, "decode.loss_seg": 0.2109, "decode.acc_seg": 87.88485, "src.loss_imnet_feat_dist": 0.12467, "mix.decode.loss_seg": 0.19596, "mix.decode.acc_seg": 85.8073, "consistency.decode.loss_seg": 0.00183, "consistency.decode.acc_seg": 92.01353, "time": 1.34059}
{"mode": "train", "epoch": 1, "iter": 2900, "lr": 6e-05, "memory": 9832, "data_time": 0.02286, "decode.loss_seg": 0.2085, "decode.acc_seg": 87.91383, "src.loss_imnet_feat_dist": 0.12997, "mix.decode.loss_seg": 0.23563, "mix.decode.acc_seg": 84.41093, "consistency.decode.loss_seg": 0.00296, "consistency.decode.acc_seg": 90.21613, "time": 1.33782}
