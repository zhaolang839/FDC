{"env_info": "sys.platform: linux\nPython: 3.6.9 (default, Jan 26 2021, 15:33:00) [GCC 8.4.0]\nCUDA available: True\nGPU 0: Tesla V100-SXM2-16GB\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 10.2, V10.2.89\nGCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\nPyTorch: 1.7.1\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 10.2\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75\n  - CuDNN 7.6.5\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.2\nOpenCV: 4.4.0\nMMCV: 1.3.7\nMMCV Compiler: GCC 7.5\nMMCV CUDA Compiler: 10.2\nMMSegmentation: 0.16.0+6d87ab8", "seed": 0, "exp_name": "230712_2134_syn2cs_dacs_a999_fdthings_rcs001_cpl_daformer_sepaspp_mitb5_poly10warm_s0_7a5c9", "mmseg_version": "0.16.0+6d87ab8", "config": "log_config = dict(\n    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\ncudnn_benchmark = True\nnorm_cfg = dict(type='BN', requires_grad=True)\nfind_unused_parameters = True\nmodel = dict(\n    type='EncoderDecoder',\n    pretrained='pretrained/mit_b5.pth',\n    backbone=dict(type='mit_b5', style='pytorch'),\n    decode_head=dict(\n        type='DAFormerHead',\n        in_channels=[64, 128, 320, 512],\n        in_index=[0, 1, 2, 3],\n        channels=256,\n        dropout_ratio=0.1,\n        num_classes=19,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        align_corners=False,\n        decoder_params=dict(\n            embed_dims=256,\n            embed_cfg=dict(type='mlp', act_cfg=None, norm_cfg=None),\n            embed_neck_cfg=dict(type='mlp', act_cfg=None, norm_cfg=None),\n            fusion_cfg=dict(\n                type='aspp',\n                sep=True,\n                dilations=(1, 6, 12, 18),\n                pool=False,\n                act_cfg=dict(type='ReLU'),\n                norm_cfg=dict(type='BN', requires_grad=True))),\n        loss_decode=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),\n    train_cfg=dict(\n        work_dir=\n        'work_dirs/local-exp7/230712_2134_syn2cs_dacs_a999_fdthings_rcs001_cpl_daformer_sepaspp_mitb5_poly10warm_s0_7a5c9'\n    ),\n    test_cfg=dict(mode='whole'))\ndataset_type = 'CityscapesDataset'\ndata_root = 'data/cityscapes/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ncrop_size = (512, 512)\nsynthia_train_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations'),\n    dict(type='Resize', img_scale=(1280, 760)),\n    dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),\n    dict(type='RandomFlip', prob=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n]\ncityscapes_train_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations'),\n    dict(type='Resize', img_scale=(1024, 512)),\n    dict(type='RandomCrop', crop_size=(512, 512)),\n    dict(type='RandomFlip', prob=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1024, 512),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=4,\n    train=dict(\n        type='UDADataset',\n        source=dict(\n            type='SynthiaDataset',\n            data_root='data/synthia/',\n            img_dir='RGB',\n            ann_dir='GT/LABELS',\n            pipeline=[\n                dict(type='LoadImageFromFile'),\n                dict(type='LoadAnnotations'),\n                dict(type='Resize', img_scale=(1280, 760)),\n                dict(\n                    type='RandomCrop',\n                    crop_size=(512, 512),\n                    cat_max_ratio=0.75),\n                dict(type='RandomFlip', prob=0.5),\n                dict(\n                    type='Normalize',\n                    mean=[123.675, 116.28, 103.53],\n                    std=[58.395, 57.12, 57.375],\n                    to_rgb=True),\n                dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),\n                dict(type='DefaultFormatBundle'),\n                dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n            ]),\n        target=dict(\n            type='CityscapesDataset',\n            data_root='data/cityscapes/',\n            img_dir='leftImg8bit/train',\n            ann_dir='gtFine/train',\n            pipeline=[\n                dict(type='LoadImageFromFile'),\n                dict(type='LoadAnnotations'),\n                dict(type='Resize', img_scale=(1024, 512)),\n                dict(type='RandomCrop', crop_size=(512, 512)),\n                dict(type='RandomFlip', prob=0.5),\n                dict(\n                    type='Normalize',\n                    mean=[123.675, 116.28, 103.53],\n                    std=[58.395, 57.12, 57.375],\n                    to_rgb=True),\n                dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),\n                dict(type='DefaultFormatBundle'),\n                dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n            ]),\n        rare_class_sampling=dict(\n            min_pixels=3000, class_temp=0.01, min_crop_ratio=0.5)),\n    val=dict(\n        type='CityscapesDataset',\n        data_root='data/cityscapes/',\n        img_dir='leftImg8bit/val',\n        ann_dir='gtFine/val',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1024, 512),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='CityscapesDataset',\n        data_root='data/cityscapes/',\n        img_dir='leftImg8bit/val',\n        ann_dir='gtFine/val',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1024, 512),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nuda = dict(\n    type='DACS',\n    alpha=0.999,\n    pseudo_threshold=0.968,\n    pseudo_weight_ignore_top=15,\n    pseudo_weight_ignore_bottom=120,\n    imnet_feature_dist_lambda=0.005,\n    imnet_feature_dist_classes=[6, 7, 11, 12, 13, 14, 15, 16, 17, 18],\n    imnet_feature_dist_scale_min_ratio=0.75,\n    mix='class',\n    blur=True,\n    color_jitter_strength=0.2,\n    color_jitter_probability=0.2,\n    debug_img_interval=1000,\n    print_grad_magnitude=False,\n    tar_aug='strong',\n    weight=10,\n    dropout=0.5,\n    thre='same',\n    bata=0.1,\n    gamar=-5,\n    model=dict(\n        type='EncoderDecoder',\n        pretrained='pretrained/mit_b5.pth',\n        backbone=dict(type='mit_b5', style='pytorch'),\n        decode_head=dict(\n            type='DAFormerHead',\n            in_channels=[64, 128, 320, 512],\n            in_index=[0, 1, 2, 3],\n            channels=256,\n            dropout_ratio=0.1,\n            num_classes=19,\n            norm_cfg=dict(type='BN', requires_grad=True),\n            align_corners=False,\n            decoder_params=dict(\n                embed_dims=256,\n                embed_cfg=dict(type='mlp', act_cfg=None, norm_cfg=None),\n                embed_neck_cfg=dict(type='mlp', act_cfg=None, norm_cfg=None),\n                fusion_cfg=dict(\n                    type='aspp',\n                    sep=True,\n                    dilations=(1, 6, 12, 18),\n                    pool=False,\n                    act_cfg=dict(type='ReLU'),\n                    norm_cfg=dict(type='BN', requires_grad=True))),\n            loss_decode=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),\n        train_cfg=dict(\n            work_dir=\n            'work_dirs/local-exp7/230712_2134_syn2cs_dacs_a999_fdthings_rcs001_cpl_daformer_sepaspp_mitb5_poly10warm_s0_7a5c9'\n        ),\n        test_cfg=dict(mode='whole')),\n    max_iters=40000)\nuse_ddp_wrapper = True\noptimizer = dict(\n    type='AdamW',\n    lr=6e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.01,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            head=dict(lr_mult=10.0),\n            pos_block=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = None\nlr_config = dict(\n    policy='poly',\n    warmup='linear',\n    warmup_iters=1500,\n    warmup_ratio=1e-06,\n    power=1.0,\n    min_lr=0.0,\n    by_epoch=False)\nn_gpus = 1\nseed = 0\nrunner = dict(type='IterBasedRunner', max_iters=40000)\ncheckpoint_config = dict(by_epoch=False, interval=40000, max_keep_ckpts=1)\nevaluation = dict(interval=4000, metric='mIoU')\nname = '230712_2134_syn2cs_dacs_a999_fdthings_rcs001_cpl_daformer_sepaspp_mitb5_poly10warm_s0_7a5c9'\nexp = 7\nname_dataset = 'synthia2cityscapes'\nname_architecture = 'daformer_sepaspp_mitb5'\nname_encoder = 'mitb5'\nname_decoder = 'daformer_sepaspp'\nname_uda = 'dacs_a999_fdthings_rcs0.01_cpl'\nname_opt = 'adamw_6e-05_pmTrue_poly10warm_1x2_40k'\nwork_dir = 'work_dirs/local-exp7/230712_2134_syn2cs_dacs_a999_fdthings_rcs001_cpl_daformer_sepaspp_mitb5_poly10warm_s0_7a5c9'\ngit_rev = '6d87ab857665f3c5a4b481c1da3fb5e227792830'\ngpu_ids = range(0, 1)\n", "CLASSES": ["road", "sidewalk", "building", "wall", "fence", "pole", "traffic light", "traffic sign", "vegetation", "terrain", "sky", "person", "rider", "car", "truck", "bus", "train", "motorcycle", "bicycle"], "PALETTE": [[128, 64, 128], [244, 35, 232], [70, 70, 70], [102, 102, 156], [190, 153, 153], [153, 153, 153], [250, 170, 30], [220, 220, 0], [107, 142, 35], [152, 251, 152], [70, 130, 180], [220, 20, 60], [255, 0, 0], [0, 0, 142], [0, 0, 70], [0, 60, 100], [0, 80, 100], [0, 0, 230], [119, 11, 32]]}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0, "memory": 9814, "data_time": 0.03962, "decode.loss_seg": 2.794, "decode.acc_seg": 4.23045, "src.loss_imnet_feat_dist": 0.06474, "mix.decode.loss_seg": 1.41146, "mix.decode.acc_seg": 15.27364, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 19.03963, "time": 1.51338}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.0, "memory": 9814, "data_time": 0.02035, "decode.loss_seg": 2.58721, "decode.acc_seg": 38.52129, "src.loss_imnet_feat_dist": 0.06699, "mix.decode.loss_seg": 1.42602, "mix.decode.acc_seg": 29.91079, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 18.6258, "time": 1.43706}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 1e-05, "memory": 9814, "data_time": 0.02005, "decode.loss_seg": 2.17061, "decode.acc_seg": 60.38289, "src.loss_imnet_feat_dist": 0.07428, "mix.decode.loss_seg": 1.12961, "mix.decode.acc_seg": 51.19671, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 41.40301, "time": 1.43937}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 1e-05, "memory": 9814, "data_time": 0.02048, "decode.loss_seg": 1.73236, "decode.acc_seg": 66.13033, "src.loss_imnet_feat_dist": 0.09706, "mix.decode.loss_seg": 0.83162, "mix.decode.acc_seg": 61.74711, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 56.68201, "time": 1.44445}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 1e-05, "memory": 9814, "data_time": 0.02092, "decode.loss_seg": 1.4011, "decode.acc_seg": 70.0997, "src.loss_imnet_feat_dist": 0.10528, "mix.decode.loss_seg": 0.66517, "mix.decode.acc_seg": 66.39098, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 62.91996, "time": 1.45485}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 1e-05, "memory": 9814, "data_time": 0.02017, "decode.loss_seg": 1.13049, "decode.acc_seg": 74.34375, "src.loss_imnet_feat_dist": 0.10737, "mix.decode.loss_seg": 0.55158, "mix.decode.acc_seg": 66.16473, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 66.02881, "time": 1.45023}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 1e-05, "memory": 9814, "data_time": 0.02084, "decode.loss_seg": 0.94976, "decode.acc_seg": 74.65985, "src.loss_imnet_feat_dist": 0.11262, "mix.decode.loss_seg": 0.50823, "mix.decode.acc_seg": 66.25665, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 61.41375, "time": 1.47051}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 2e-05, "memory": 9814, "data_time": 0.02018, "decode.loss_seg": 0.88655, "decode.acc_seg": 75.2253, "src.loss_imnet_feat_dist": 0.11699, "mix.decode.loss_seg": 0.4225, "mix.decode.acc_seg": 67.08209, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 63.15088, "time": 1.47664}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 2e-05, "memory": 9814, "data_time": 0.0201, "decode.loss_seg": 0.75516, "decode.acc_seg": 77.33019, "src.loss_imnet_feat_dist": 0.11781, "mix.decode.loss_seg": 0.34935, "mix.decode.acc_seg": 68.25912, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 65.78733, "time": 1.44286}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 2e-05, "memory": 9814, "data_time": 0.02022, "decode.loss_seg": 0.69086, "decode.acc_seg": 77.36184, "src.loss_imnet_feat_dist": 0.11654, "mix.decode.loss_seg": 0.34941, "mix.decode.acc_seg": 68.05356, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 49.44264, "time": 1.43799}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 2e-05, "memory": 9814, "data_time": 0.02018, "decode.loss_seg": 0.63326, "decode.acc_seg": 78.74581, "src.loss_imnet_feat_dist": 0.11815, "mix.decode.loss_seg": 0.32706, "mix.decode.acc_seg": 69.11098, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 56.12176, "time": 1.45231}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 2e-05, "memory": 9814, "data_time": 0.02056, "decode.loss_seg": 0.59768, "decode.acc_seg": 79.3926, "src.loss_imnet_feat_dist": 0.12512, "mix.decode.loss_seg": 0.31452, "mix.decode.acc_seg": 70.16607, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 36.13388, "time": 1.43761}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 3e-05, "memory": 9814, "data_time": 0.02022, "decode.loss_seg": 0.53261, "decode.acc_seg": 81.33289, "src.loss_imnet_feat_dist": 0.11599, "mix.decode.loss_seg": 0.27789, "mix.decode.acc_seg": 71.06979, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 50.56781, "time": 1.43653}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 3e-05, "memory": 9814, "data_time": 0.02022, "decode.loss_seg": 0.52465, "decode.acc_seg": 81.1955, "src.loss_imnet_feat_dist": 0.11987, "mix.decode.loss_seg": 0.26441, "mix.decode.acc_seg": 72.02674, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 50.55144, "time": 1.44103}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 3e-05, "memory": 9814, "data_time": 0.02038, "decode.loss_seg": 0.44899, "decode.acc_seg": 82.36117, "src.loss_imnet_feat_dist": 0.11249, "mix.decode.loss_seg": 0.22214, "mix.decode.acc_seg": 71.61068, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 60.51191, "time": 1.44032}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 3e-05, "memory": 9814, "data_time": 0.02013, "decode.loss_seg": 0.40054, "decode.acc_seg": 82.66925, "src.loss_imnet_feat_dist": 0.12428, "mix.decode.loss_seg": 0.20998, "mix.decode.acc_seg": 71.11822, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 63.97241, "time": 1.43984}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 3e-05, "memory": 9814, "data_time": 0.02031, "decode.loss_seg": 0.41092, "decode.acc_seg": 84.00861, "src.loss_imnet_feat_dist": 0.12288, "mix.decode.loss_seg": 0.23529, "mix.decode.acc_seg": 69.40336, "consistency.decode.loss_seg": 5e-05, "consistency.decode.acc_seg": 50.78582, "time": 1.44004}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 4e-05, "memory": 9814, "data_time": 0.02007, "decode.loss_seg": 0.46926, "decode.acc_seg": 81.61789, "src.loss_imnet_feat_dist": 0.12525, "mix.decode.loss_seg": 0.2653, "mix.decode.acc_seg": 67.54961, "consistency.decode.loss_seg": 5e-05, "consistency.decode.acc_seg": 44.93784, "time": 1.46852}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 4e-05, "memory": 9814, "data_time": 0.02022, "decode.loss_seg": 0.36829, "decode.acc_seg": 84.41527, "src.loss_imnet_feat_dist": 0.1284, "mix.decode.loss_seg": 0.19481, "mix.decode.acc_seg": 71.93071, "consistency.decode.loss_seg": 2e-05, "consistency.decode.acc_seg": 54.31454, "time": 1.44239}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 4e-05, "memory": 9814, "data_time": 0.02037, "decode.loss_seg": 0.35142, "decode.acc_seg": 84.56458, "src.loss_imnet_feat_dist": 0.12195, "mix.decode.loss_seg": 0.2036, "mix.decode.acc_seg": 68.39461, "consistency.decode.loss_seg": 0.0001, "consistency.decode.acc_seg": 55.49607, "time": 1.44645}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 4e-05, "memory": 9814, "data_time": 0.02051, "decode.loss_seg": 0.35421, "decode.acc_seg": 83.684, "src.loss_imnet_feat_dist": 0.11957, "mix.decode.loss_seg": 0.22961, "mix.decode.acc_seg": 71.92951, "consistency.decode.loss_seg": 0.00011, "consistency.decode.acc_seg": 61.77227, "time": 1.5006}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 4e-05, "memory": 9814, "data_time": 0.02088, "decode.loss_seg": 0.34588, "decode.acc_seg": 84.14552, "src.loss_imnet_feat_dist": 0.12459, "mix.decode.loss_seg": 0.22598, "mix.decode.acc_seg": 71.10017, "consistency.decode.loss_seg": 0.0001, "consistency.decode.acc_seg": 61.15376, "time": 1.44473}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 4e-05, "memory": 9814, "data_time": 0.02085, "decode.loss_seg": 0.35953, "decode.acc_seg": 83.88477, "src.loss_imnet_feat_dist": 0.12426, "mix.decode.loss_seg": 0.16602, "mix.decode.acc_seg": 73.87839, "consistency.decode.loss_seg": 0.00015, "consistency.decode.acc_seg": 68.95404, "time": 1.45221}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 5e-05, "memory": 9814, "data_time": 0.02077, "decode.loss_seg": 0.37454, "decode.acc_seg": 84.11237, "src.loss_imnet_feat_dist": 0.1311, "mix.decode.loss_seg": 0.24056, "mix.decode.acc_seg": 71.98253, "consistency.decode.loss_seg": 0.00181, "consistency.decode.acc_seg": 49.90693, "time": 1.44436}
{"mode": "train", "epoch": 1, "iter": 1250, "lr": 5e-05, "memory": 9814, "data_time": 0.02073, "decode.loss_seg": 0.33435, "decode.acc_seg": 84.76891, "src.loss_imnet_feat_dist": 0.12664, "mix.decode.loss_seg": 0.22969, "mix.decode.acc_seg": 73.76184, "consistency.decode.loss_seg": 0.0023, "consistency.decode.acc_seg": 53.80334, "time": 1.44395}
{"mode": "train", "epoch": 1, "iter": 1300, "lr": 5e-05, "memory": 9814, "data_time": 0.02027, "decode.loss_seg": 0.37026, "decode.acc_seg": 84.15412, "src.loss_imnet_feat_dist": 0.13081, "mix.decode.loss_seg": 0.25844, "mix.decode.acc_seg": 72.89386, "consistency.decode.loss_seg": 0.00417, "consistency.decode.acc_seg": 30.78686, "time": 1.44327}
{"mode": "train", "epoch": 1, "iter": 1350, "lr": 5e-05, "memory": 9814, "data_time": 0.02046, "decode.loss_seg": 0.37997, "decode.acc_seg": 83.71674, "src.loss_imnet_feat_dist": 0.12828, "mix.decode.loss_seg": 0.24365, "mix.decode.acc_seg": 73.32939, "consistency.decode.loss_seg": 0.00381, "consistency.decode.acc_seg": 52.62601, "time": 1.44092}
{"mode": "train", "epoch": 1, "iter": 1400, "lr": 5e-05, "memory": 9814, "data_time": 0.02093, "decode.loss_seg": 0.32267, "decode.acc_seg": 85.29137, "src.loss_imnet_feat_dist": 0.12616, "mix.decode.loss_seg": 0.21667, "mix.decode.acc_seg": 77.1513, "consistency.decode.loss_seg": 0.00375, "consistency.decode.acc_seg": 59.17126, "time": 1.50034}
{"mode": "train", "epoch": 1, "iter": 1450, "lr": 6e-05, "memory": 9814, "data_time": 0.02068, "decode.loss_seg": 0.29395, "decode.acc_seg": 85.8227, "src.loss_imnet_feat_dist": 0.12728, "mix.decode.loss_seg": 0.20742, "mix.decode.acc_seg": 76.27927, "consistency.decode.loss_seg": 0.00253, "consistency.decode.acc_seg": 63.43558, "time": 1.5584}
{"mode": "train", "epoch": 1, "iter": 1500, "lr": 6e-05, "memory": 9814, "data_time": 0.02059, "decode.loss_seg": 0.30362, "decode.acc_seg": 84.91805, "src.loss_imnet_feat_dist": 0.13457, "mix.decode.loss_seg": 0.22582, "mix.decode.acc_seg": 76.6351, "consistency.decode.loss_seg": 0.00319, "consistency.decode.acc_seg": 63.25088, "time": 1.44223}
{"mode": "train", "epoch": 1, "iter": 1550, "lr": 6e-05, "memory": 9814, "data_time": 0.02267, "decode.loss_seg": 0.26631, "decode.acc_seg": 87.17298, "src.loss_imnet_feat_dist": 0.12556, "mix.decode.loss_seg": 0.17912, "mix.decode.acc_seg": 78.60172, "consistency.decode.loss_seg": 0.00222, "consistency.decode.acc_seg": 67.74583, "time": 1.46869}
{"mode": "train", "epoch": 1, "iter": 1600, "lr": 6e-05, "memory": 9814, "data_time": 0.02044, "decode.loss_seg": 0.26731, "decode.acc_seg": 86.6942, "src.loss_imnet_feat_dist": 0.12829, "mix.decode.loss_seg": 0.17389, "mix.decode.acc_seg": 79.98018, "consistency.decode.loss_seg": 0.00239, "consistency.decode.acc_seg": 71.36028, "time": 1.44258}
{"mode": "train", "epoch": 1, "iter": 1650, "lr": 6e-05, "memory": 9814, "data_time": 0.02298, "decode.loss_seg": 0.29921, "decode.acc_seg": 86.47829, "src.loss_imnet_feat_dist": 0.13288, "mix.decode.loss_seg": 0.2335, "mix.decode.acc_seg": 78.28669, "consistency.decode.loss_seg": 0.00392, "consistency.decode.acc_seg": 71.01266, "time": 1.45893}
{"mode": "train", "epoch": 1, "iter": 1700, "lr": 6e-05, "memory": 9814, "data_time": 0.02046, "decode.loss_seg": 0.27919, "decode.acc_seg": 86.13738, "src.loss_imnet_feat_dist": 0.13326, "mix.decode.loss_seg": 0.21216, "mix.decode.acc_seg": 78.89072, "consistency.decode.loss_seg": 0.00752, "consistency.decode.acc_seg": 63.89907, "time": 1.47775}
{"mode": "train", "epoch": 1, "iter": 1750, "lr": 6e-05, "memory": 9814, "data_time": 0.02034, "decode.loss_seg": 0.25299, "decode.acc_seg": 86.50127, "src.loss_imnet_feat_dist": 0.12743, "mix.decode.loss_seg": 0.18413, "mix.decode.acc_seg": 81.45348, "consistency.decode.loss_seg": 0.00486, "consistency.decode.acc_seg": 72.96596, "time": 1.44026}
{"mode": "train", "epoch": 1, "iter": 1800, "lr": 6e-05, "memory": 9814, "data_time": 0.02018, "decode.loss_seg": 0.25741, "decode.acc_seg": 87.26582, "src.loss_imnet_feat_dist": 0.12945, "mix.decode.loss_seg": 0.18836, "mix.decode.acc_seg": 81.27922, "consistency.decode.loss_seg": 0.00361, "consistency.decode.acc_seg": 73.30841, "time": 1.43889}
{"mode": "train", "epoch": 1, "iter": 1850, "lr": 6e-05, "memory": 9814, "data_time": 0.02031, "decode.loss_seg": 0.24982, "decode.acc_seg": 87.42162, "src.loss_imnet_feat_dist": 0.12254, "mix.decode.loss_seg": 0.20615, "mix.decode.acc_seg": 80.56246, "consistency.decode.loss_seg": 0.00525, "consistency.decode.acc_seg": 75.70475, "time": 1.44308}
{"mode": "train", "epoch": 1, "iter": 1900, "lr": 6e-05, "memory": 9814, "data_time": 0.02062, "decode.loss_seg": 0.23552, "decode.acc_seg": 86.35405, "src.loss_imnet_feat_dist": 0.12629, "mix.decode.loss_seg": 0.19278, "mix.decode.acc_seg": 81.56486, "consistency.decode.loss_seg": 0.00681, "consistency.decode.acc_seg": 74.82378, "time": 1.44725}
{"mode": "train", "epoch": 1, "iter": 1950, "lr": 6e-05, "memory": 9814, "data_time": 0.02045, "decode.loss_seg": 0.24866, "decode.acc_seg": 85.54646, "src.loss_imnet_feat_dist": 0.13334, "mix.decode.loss_seg": 0.21893, "mix.decode.acc_seg": 78.78414, "consistency.decode.loss_seg": 0.00744, "consistency.decode.acc_seg": 74.66035, "time": 1.44272}
{"mode": "train", "epoch": 1, "iter": 2000, "lr": 6e-05, "memory": 9814, "data_time": 0.02082, "decode.loss_seg": 0.21981, "decode.acc_seg": 88.03934, "src.loss_imnet_feat_dist": 0.13024, "mix.decode.loss_seg": 0.17521, "mix.decode.acc_seg": 83.17192, "consistency.decode.loss_seg": 0.00605, "consistency.decode.acc_seg": 75.82821, "time": 1.46099}
{"mode": "train", "epoch": 1, "iter": 2050, "lr": 6e-05, "memory": 9814, "data_time": 0.02096, "decode.loss_seg": 0.26008, "decode.acc_seg": 86.95552, "src.loss_imnet_feat_dist": 0.12095, "mix.decode.loss_seg": 0.22195, "mix.decode.acc_seg": 80.25335, "consistency.decode.loss_seg": 0.00918, "consistency.decode.acc_seg": 73.25055, "time": 1.48133}
{"mode": "train", "epoch": 1, "iter": 2100, "lr": 6e-05, "memory": 9814, "data_time": 0.02023, "decode.loss_seg": 0.24102, "decode.acc_seg": 86.33667, "src.loss_imnet_feat_dist": 0.13352, "mix.decode.loss_seg": 0.21883, "mix.decode.acc_seg": 80.52169, "consistency.decode.loss_seg": 0.00736, "consistency.decode.acc_seg": 78.41827, "time": 1.44153}
{"mode": "train", "epoch": 1, "iter": 2150, "lr": 6e-05, "memory": 9814, "data_time": 0.02085, "decode.loss_seg": 0.24099, "decode.acc_seg": 87.78054, "src.loss_imnet_feat_dist": 0.12817, "mix.decode.loss_seg": 0.22466, "mix.decode.acc_seg": 81.85225, "consistency.decode.loss_seg": 0.00799, "consistency.decode.acc_seg": 77.83697, "time": 1.44634}
{"mode": "train", "epoch": 1, "iter": 2200, "lr": 6e-05, "memory": 9814, "data_time": 0.02136, "decode.loss_seg": 0.24713, "decode.acc_seg": 87.10534, "src.loss_imnet_feat_dist": 0.13004, "mix.decode.loss_seg": 0.20178, "mix.decode.acc_seg": 83.18687, "consistency.decode.loss_seg": 0.0093, "consistency.decode.acc_seg": 79.13571, "time": 1.44776}
{"mode": "train", "epoch": 1, "iter": 2250, "lr": 6e-05, "memory": 9814, "data_time": 0.02063, "decode.loss_seg": 0.21608, "decode.acc_seg": 88.06972, "src.loss_imnet_feat_dist": 0.12204, "mix.decode.loss_seg": 0.18606, "mix.decode.acc_seg": 83.89992, "consistency.decode.loss_seg": 0.00552, "consistency.decode.acc_seg": 81.93836, "time": 1.44765}
{"mode": "train", "epoch": 1, "iter": 2300, "lr": 6e-05, "memory": 9814, "data_time": 0.02068, "decode.loss_seg": 0.21704, "decode.acc_seg": 88.58406, "src.loss_imnet_feat_dist": 0.12148, "mix.decode.loss_seg": 0.1767, "mix.decode.acc_seg": 84.183, "consistency.decode.loss_seg": 0.00625, "consistency.decode.acc_seg": 81.39539, "time": 1.44381}
{"mode": "train", "epoch": 1, "iter": 2350, "lr": 6e-05, "memory": 9814, "data_time": 0.02063, "decode.loss_seg": 0.21782, "decode.acc_seg": 87.68347, "src.loss_imnet_feat_dist": 0.12554, "mix.decode.loss_seg": 0.20048, "mix.decode.acc_seg": 82.77748, "consistency.decode.loss_seg": 0.00831, "consistency.decode.acc_seg": 81.89206, "time": 1.44539}
{"mode": "train", "epoch": 1, "iter": 2400, "lr": 6e-05, "memory": 9814, "data_time": 0.02038, "decode.loss_seg": 0.21983, "decode.acc_seg": 87.46733, "src.loss_imnet_feat_dist": 0.12175, "mix.decode.loss_seg": 0.21742, "mix.decode.acc_seg": 83.11105, "consistency.decode.loss_seg": 0.00969, "consistency.decode.acc_seg": 82.66855, "time": 1.43903}
{"mode": "train", "epoch": 1, "iter": 2450, "lr": 6e-05, "memory": 9814, "data_time": 0.02034, "decode.loss_seg": 0.22902, "decode.acc_seg": 88.20169, "src.loss_imnet_feat_dist": NaN, "mix.decode.loss_seg": 0.17225, "mix.decode.acc_seg": 85.8378, "consistency.decode.loss_seg": 0.00691, "consistency.decode.acc_seg": 84.02435, "time": 1.43971}
{"mode": "train", "epoch": 1, "iter": 2500, "lr": 6e-05, "memory": 9814, "data_time": 0.02045, "decode.loss_seg": 0.22895, "decode.acc_seg": 87.31599, "src.loss_imnet_feat_dist": 0.12513, "mix.decode.loss_seg": 0.21226, "mix.decode.acc_seg": 83.51056, "consistency.decode.loss_seg": 0.00917, "consistency.decode.acc_seg": 82.55108, "time": 1.45034}
{"mode": "train", "epoch": 1, "iter": 2550, "lr": 6e-05, "memory": 9814, "data_time": 0.02028, "decode.loss_seg": 0.24159, "decode.acc_seg": 86.17023, "src.loss_imnet_feat_dist": 0.12189, "mix.decode.loss_seg": 0.25918, "mix.decode.acc_seg": 81.92826, "consistency.decode.loss_seg": 0.03014, "consistency.decode.acc_seg": 78.96245, "time": 1.44138}
{"mode": "train", "epoch": 1, "iter": 2600, "lr": 6e-05, "memory": 9814, "data_time": 0.02069, "decode.loss_seg": 0.22179, "decode.acc_seg": 87.64777, "src.loss_imnet_feat_dist": 0.12189, "mix.decode.loss_seg": 0.21584, "mix.decode.acc_seg": 83.88615, "consistency.decode.loss_seg": 0.01629, "consistency.decode.acc_seg": 81.33305, "time": 1.4687}
{"mode": "train", "epoch": 1, "iter": 2650, "lr": 6e-05, "memory": 9814, "data_time": 0.02056, "decode.loss_seg": 0.26292, "decode.acc_seg": 86.6346, "src.loss_imnet_feat_dist": 0.1311, "mix.decode.loss_seg": 0.22819, "mix.decode.acc_seg": 83.85958, "consistency.decode.loss_seg": 0.02167, "consistency.decode.acc_seg": 78.27847, "time": 1.44842}
{"mode": "train", "epoch": 1, "iter": 2700, "lr": 6e-05, "memory": 9814, "data_time": 0.02121, "decode.loss_seg": 0.24155, "decode.acc_seg": 86.86248, "src.loss_imnet_feat_dist": 0.12464, "mix.decode.loss_seg": 0.2316, "mix.decode.acc_seg": 84.4173, "consistency.decode.loss_seg": 0.01493, "consistency.decode.acc_seg": 83.15583, "time": 1.44264}
{"mode": "train", "epoch": 1, "iter": 2750, "lr": 6e-05, "memory": 9814, "data_time": 0.02094, "decode.loss_seg": 0.21298, "decode.acc_seg": 87.40277, "src.loss_imnet_feat_dist": 0.12664, "mix.decode.loss_seg": 0.18898, "mix.decode.acc_seg": 85.94899, "consistency.decode.loss_seg": 0.01499, "consistency.decode.acc_seg": 83.78896, "time": 1.44139}
{"mode": "train", "epoch": 1, "iter": 2800, "lr": 6e-05, "memory": 9814, "data_time": 0.02145, "decode.loss_seg": 0.20084, "decode.acc_seg": 88.14598, "src.loss_imnet_feat_dist": NaN, "mix.decode.loss_seg": 0.18844, "mix.decode.acc_seg": 86.09221, "consistency.decode.loss_seg": 0.00924, "consistency.decode.acc_seg": 85.48932, "time": 1.44199}
{"mode": "train", "epoch": 1, "iter": 2850, "lr": 6e-05, "memory": 9814, "data_time": 0.02121, "decode.loss_seg": 0.21876, "decode.acc_seg": 88.05544, "src.loss_imnet_feat_dist": 0.12586, "mix.decode.loss_seg": 0.20613, "mix.decode.acc_seg": 85.95415, "consistency.decode.loss_seg": 0.01218, "consistency.decode.acc_seg": 83.81579, "time": 1.49671}
{"mode": "train", "epoch": 1, "iter": 2900, "lr": 6e-05, "memory": 9814, "data_time": 0.02082, "decode.loss_seg": 0.21725, "decode.acc_seg": 87.4852, "src.loss_imnet_feat_dist": 0.13151, "mix.decode.loss_seg": 0.22335, "mix.decode.acc_seg": 84.77469, "consistency.decode.loss_seg": 0.01261, "consistency.decode.acc_seg": 83.52477, "time": 1.47148}
{"mode": "train", "epoch": 1, "iter": 2950, "lr": 6e-05, "memory": 9814, "data_time": 0.02113, "decode.loss_seg": 0.213, "decode.acc_seg": 87.72568, "src.loss_imnet_feat_dist": 0.12595, "mix.decode.loss_seg": 0.21579, "mix.decode.acc_seg": 84.6001, "consistency.decode.loss_seg": 0.01838, "consistency.decode.acc_seg": 84.06739, "time": 1.44114}
{"mode": "train", "epoch": 1, "iter": 3000, "lr": 6e-05, "memory": 9814, "data_time": 0.02067, "decode.loss_seg": 0.21869, "decode.acc_seg": 88.00341, "src.loss_imnet_feat_dist": 0.12811, "mix.decode.loss_seg": 0.22572, "mix.decode.acc_seg": 85.56613, "consistency.decode.loss_seg": 0.01477, "consistency.decode.acc_seg": 84.85746, "time": 1.4404}
{"mode": "train", "epoch": 1, "iter": 3050, "lr": 6e-05, "memory": 9814, "data_time": 0.02149, "decode.loss_seg": 0.22597, "decode.acc_seg": 87.00238, "src.loss_imnet_feat_dist": 0.11994, "mix.decode.loss_seg": 0.20961, "mix.decode.acc_seg": 85.61599, "consistency.decode.loss_seg": 0.01478, "consistency.decode.acc_seg": 84.7666, "time": 1.49116}
{"mode": "train", "epoch": 1, "iter": 3100, "lr": 6e-05, "memory": 9814, "data_time": 0.02178, "decode.loss_seg": 0.20946, "decode.acc_seg": 87.45446, "src.loss_imnet_feat_dist": 0.12194, "mix.decode.loss_seg": 0.21033, "mix.decode.acc_seg": 85.27831, "consistency.decode.loss_seg": 0.01426, "consistency.decode.acc_seg": 84.36182, "time": 1.4485}
{"mode": "train", "epoch": 1, "iter": 3150, "lr": 6e-05, "memory": 9814, "data_time": 0.02105, "decode.loss_seg": 0.19038, "decode.acc_seg": 88.73383, "src.loss_imnet_feat_dist": 0.12468, "mix.decode.loss_seg": 0.18596, "mix.decode.acc_seg": 86.77494, "consistency.decode.loss_seg": 0.02109, "consistency.decode.acc_seg": 83.72755, "time": 1.44312}
{"mode": "train", "epoch": 1, "iter": 3200, "lr": 6e-05, "memory": 9814, "data_time": 0.02101, "decode.loss_seg": 0.18989, "decode.acc_seg": 88.55923, "src.loss_imnet_feat_dist": 0.12521, "mix.decode.loss_seg": 0.19742, "mix.decode.acc_seg": 86.59689, "consistency.decode.loss_seg": 0.01268, "consistency.decode.acc_seg": 86.14774, "time": 1.44175}
{"mode": "train", "epoch": 1, "iter": 3250, "lr": 6e-05, "memory": 9814, "data_time": 0.02106, "decode.loss_seg": 0.18366, "decode.acc_seg": 88.69524, "src.loss_imnet_feat_dist": 0.12192, "mix.decode.loss_seg": 0.19758, "mix.decode.acc_seg": 86.3428, "consistency.decode.loss_seg": 0.01282, "consistency.decode.acc_seg": 86.00783, "time": 1.44327}
{"mode": "train", "epoch": 1, "iter": 3300, "lr": 6e-05, "memory": 9814, "data_time": 0.02105, "decode.loss_seg": 0.21603, "decode.acc_seg": 88.4725, "src.loss_imnet_feat_dist": 0.12203, "mix.decode.loss_seg": 0.25308, "mix.decode.acc_seg": 83.61249, "consistency.decode.loss_seg": 0.02608, "consistency.decode.acc_seg": 83.1163, "time": 1.45155}
{"mode": "train", "epoch": 1, "iter": 3350, "lr": 5e-05, "memory": 9814, "data_time": 0.02063, "decode.loss_seg": 0.23161, "decode.acc_seg": 86.87962, "src.loss_imnet_feat_dist": 0.13024, "mix.decode.loss_seg": 0.21078, "mix.decode.acc_seg": 85.95116, "consistency.decode.loss_seg": 0.01996, "consistency.decode.acc_seg": 85.17932, "time": 1.43872}
{"mode": "train", "epoch": 1, "iter": 3400, "lr": 5e-05, "memory": 9814, "data_time": 0.02035, "decode.loss_seg": 0.19147, "decode.acc_seg": 88.35021, "src.loss_imnet_feat_dist": 0.12363, "mix.decode.loss_seg": 0.19315, "mix.decode.acc_seg": 86.70897, "consistency.decode.loss_seg": 0.01143, "consistency.decode.acc_seg": 86.98955, "time": 1.44294}
{"mode": "train", "epoch": 1, "iter": 3450, "lr": 5e-05, "memory": 9814, "data_time": 0.02056, "decode.loss_seg": 0.19235, "decode.acc_seg": 88.83052, "src.loss_imnet_feat_dist": 0.12992, "mix.decode.loss_seg": 0.19556, "mix.decode.acc_seg": 87.36919, "consistency.decode.loss_seg": 0.00934, "consistency.decode.acc_seg": 88.4596, "time": 1.44306}
{"mode": "train", "epoch": 1, "iter": 3500, "lr": 5e-05, "memory": 9814, "data_time": 0.02065, "decode.loss_seg": 0.21053, "decode.acc_seg": 88.8404, "src.loss_imnet_feat_dist": 0.12543, "mix.decode.loss_seg": 0.198, "mix.decode.acc_seg": 87.20417, "consistency.decode.loss_seg": 0.01471, "consistency.decode.acc_seg": 87.31709, "time": 1.44544}
{"mode": "train", "epoch": 1, "iter": 3550, "lr": 5e-05, "memory": 9814, "data_time": 0.02051, "decode.loss_seg": 0.21195, "decode.acc_seg": 88.1205, "src.loss_imnet_feat_dist": 0.13136, "mix.decode.loss_seg": 0.211, "mix.decode.acc_seg": 86.01826, "consistency.decode.loss_seg": 0.01687, "consistency.decode.acc_seg": 86.80894, "time": 1.47953}
{"mode": "train", "epoch": 1, "iter": 3600, "lr": 5e-05, "memory": 9814, "data_time": 0.02047, "decode.loss_seg": 0.19678, "decode.acc_seg": 87.91986, "src.loss_imnet_feat_dist": 0.13219, "mix.decode.loss_seg": 0.2256, "mix.decode.acc_seg": 86.10677, "consistency.decode.loss_seg": 0.01259, "consistency.decode.acc_seg": 87.48528, "time": 1.44207}
{"mode": "train", "epoch": 1, "iter": 3650, "lr": 5e-05, "memory": 9814, "data_time": 0.02037, "decode.loss_seg": 0.21978, "decode.acc_seg": 87.22241, "src.loss_imnet_feat_dist": 0.12233, "mix.decode.loss_seg": 0.2368, "mix.decode.acc_seg": 83.8397, "consistency.decode.loss_seg": 0.02444, "consistency.decode.acc_seg": 84.59476, "time": 1.44344}
{"mode": "train", "epoch": 1, "iter": 3700, "lr": 5e-05, "memory": 9814, "data_time": 0.02111, "decode.loss_seg": 0.20948, "decode.acc_seg": 88.18966, "src.loss_imnet_feat_dist": 0.11925, "mix.decode.loss_seg": 0.20105, "mix.decode.acc_seg": 86.94479, "consistency.decode.loss_seg": 0.01578, "consistency.decode.acc_seg": 86.26287, "time": 1.44647}
{"mode": "train", "epoch": 1, "iter": 3750, "lr": 5e-05, "memory": 9814, "data_time": 0.0203, "decode.loss_seg": 0.19997, "decode.acc_seg": 88.47057, "src.loss_imnet_feat_dist": 0.12305, "mix.decode.loss_seg": 0.21535, "mix.decode.acc_seg": 86.99802, "consistency.decode.loss_seg": 0.01871, "consistency.decode.acc_seg": 86.20286, "time": 1.44076}
