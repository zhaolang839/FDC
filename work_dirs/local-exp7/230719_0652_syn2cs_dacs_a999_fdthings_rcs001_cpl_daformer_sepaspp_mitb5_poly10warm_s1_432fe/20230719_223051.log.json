{"env_info": "sys.platform: linux\nPython: 3.6.9 (default, Jan 26 2021, 15:33:00) [GCC 8.4.0]\nCUDA available: True\nGPU 0: Tesla V100-SXM2-16GB\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 10.2, V10.2.89\nGCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\nPyTorch: 1.8.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 10.2\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70\n  - CuDNN 7.6.5\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.9.0\nOpenCV: 4.4.0\nMMCV: 1.3.7\nMMCV Compiler: GCC 7.5\nMMCV CUDA Compiler: 10.2\nMMSegmentation: 0.16.0+6d87ab8", "seed": 1, "exp_name": "230719_0652_syn2cs_dacs_a999_fdthings_rcs001_cpl_daformer_sepaspp_mitb5_poly10warm_s1_432fe", "mmseg_version": "0.16.0+6d87ab8", "config": "log_config = dict(\n    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\ncudnn_benchmark = True\nnorm_cfg = dict(type='BN', requires_grad=True)\nfind_unused_parameters = True\nmodel = dict(\n    type='EncoderDecoder',\n    pretrained='pretrained/mit_b5.pth',\n    backbone=dict(type='mit_b5', style='pytorch'),\n    decode_head=dict(\n        type='DAFormerHead',\n        in_channels=[64, 128, 320, 512],\n        in_index=[0, 1, 2, 3],\n        channels=256,\n        dropout_ratio=0.1,\n        num_classes=19,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        align_corners=False,\n        decoder_params=dict(\n            embed_dims=256,\n            embed_cfg=dict(type='mlp', act_cfg=None, norm_cfg=None),\n            embed_neck_cfg=dict(type='mlp', act_cfg=None, norm_cfg=None),\n            fusion_cfg=dict(\n                type='aspp',\n                sep=True,\n                dilations=(1, 6, 12, 18),\n                pool=False,\n                act_cfg=dict(type='ReLU'),\n                norm_cfg=dict(type='BN', requires_grad=True))),\n        loss_decode=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),\n    train_cfg=dict(\n        work_dir=\n        'work_dirs/local-exp7/230719_0652_syn2cs_dacs_a999_fdthings_rcs001_cpl_daformer_sepaspp_mitb5_poly10warm_s1_432fe'\n    ),\n    test_cfg=dict(mode='whole'))\ndataset_type = 'CityscapesDataset'\ndata_root = 'data/cityscapes/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ncrop_size = (512, 512)\nsynthia_train_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations'),\n    dict(type='Resize', img_scale=(1280, 760)),\n    dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),\n    dict(type='RandomFlip', prob=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n]\ncityscapes_train_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations'),\n    dict(type='Resize', img_scale=(1024, 512)),\n    dict(type='RandomCrop', crop_size=(512, 512)),\n    dict(type='RandomFlip', prob=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1024, 512),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=4,\n    train=dict(\n        type='UDADataset',\n        source=dict(\n            type='SynthiaDataset',\n            data_root='data/synthia/',\n            img_dir='RGB',\n            ann_dir='GT/LABELS',\n            pipeline=[\n                dict(type='LoadImageFromFile'),\n                dict(type='LoadAnnotations'),\n                dict(type='Resize', img_scale=(1280, 760)),\n                dict(\n                    type='RandomCrop',\n                    crop_size=(512, 512),\n                    cat_max_ratio=0.75),\n                dict(type='RandomFlip', prob=0.5),\n                dict(\n                    type='Normalize',\n                    mean=[123.675, 116.28, 103.53],\n                    std=[58.395, 57.12, 57.375],\n                    to_rgb=True),\n                dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),\n                dict(type='DefaultFormatBundle'),\n                dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n            ]),\n        target=dict(\n            type='CityscapesDataset',\n            data_root='data/cityscapes/',\n            img_dir='leftImg8bit/train',\n            ann_dir='gtFine/train',\n            pipeline=[\n                dict(type='LoadImageFromFile'),\n                dict(type='LoadAnnotations'),\n                dict(type='Resize', img_scale=(1024, 512)),\n                dict(type='RandomCrop', crop_size=(512, 512)),\n                dict(type='RandomFlip', prob=0.5),\n                dict(\n                    type='Normalize',\n                    mean=[123.675, 116.28, 103.53],\n                    std=[58.395, 57.12, 57.375],\n                    to_rgb=True),\n                dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),\n                dict(type='DefaultFormatBundle'),\n                dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n            ]),\n        rare_class_sampling=dict(\n            min_pixels=3000, class_temp=0.01, min_crop_ratio=0.5)),\n    val=dict(\n        type='CityscapesDataset',\n        data_root='data/cityscapes/',\n        img_dir='leftImg8bit/val',\n        ann_dir='gtFine/val',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1024, 512),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='CityscapesDataset',\n        data_root='data/cityscapes/',\n        img_dir='leftImg8bit/val',\n        ann_dir='gtFine/val',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1024, 512),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nuda = dict(\n    type='DACS',\n    alpha=0.999,\n    pseudo_threshold=0.968,\n    pseudo_weight_ignore_top=15,\n    pseudo_weight_ignore_bottom=120,\n    imnet_feature_dist_lambda=0.005,\n    imnet_feature_dist_classes=[6, 7, 11, 12, 13, 14, 15, 16, 17, 18],\n    imnet_feature_dist_scale_min_ratio=0.75,\n    mix='class',\n    blur=True,\n    color_jitter_strength=0.2,\n    color_jitter_probability=0.2,\n    debug_img_interval=1000,\n    print_grad_magnitude=False,\n    tar_aug='',\n    weight=1,\n    dropout=0.5,\n    thre='same',\n    bata=0.2,\n    gamar=-2,\n    model=dict(\n        type='EncoderDecoder',\n        pretrained='pretrained/mit_b5.pth',\n        backbone=dict(type='mit_b5', style='pytorch'),\n        decode_head=dict(\n            type='DAFormerHead',\n            in_channels=[64, 128, 320, 512],\n            in_index=[0, 1, 2, 3],\n            channels=256,\n            dropout_ratio=0.1,\n            num_classes=19,\n            norm_cfg=dict(type='BN', requires_grad=True),\n            align_corners=False,\n            decoder_params=dict(\n                embed_dims=256,\n                embed_cfg=dict(type='mlp', act_cfg=None, norm_cfg=None),\n                embed_neck_cfg=dict(type='mlp', act_cfg=None, norm_cfg=None),\n                fusion_cfg=dict(\n                    type='aspp',\n                    sep=True,\n                    dilations=(1, 6, 12, 18),\n                    pool=False,\n                    act_cfg=dict(type='ReLU'),\n                    norm_cfg=dict(type='BN', requires_grad=True))),\n            loss_decode=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),\n        train_cfg=dict(\n            work_dir=\n            'work_dirs/local-exp7/230719_0652_syn2cs_dacs_a999_fdthings_rcs001_cpl_daformer_sepaspp_mitb5_poly10warm_s1_432fe'\n        ),\n        test_cfg=dict(mode='whole')),\n    max_iters=40000)\nuse_ddp_wrapper = True\noptimizer = dict(\n    type='AdamW',\n    lr=6e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.01,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            head=dict(lr_mult=10.0),\n            pos_block=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = None\nlr_config = dict(\n    policy='poly',\n    warmup='linear',\n    warmup_iters=1500,\n    warmup_ratio=1e-06,\n    power=1.0,\n    min_lr=0.0,\n    by_epoch=False)\nn_gpus = 1\nseed = 1\nrunner = dict(type='IterBasedRunner', max_iters=40000)\ncheckpoint_config = dict(by_epoch=False, interval=40000, max_keep_ckpts=1)\nevaluation = dict(interval=4000, metric='mIoU')\nname = '230719_0652_syn2cs_dacs_a999_fdthings_rcs001_cpl_daformer_sepaspp_mitb5_poly10warm_s1_432fe'\nexp = 7\nname_dataset = 'synthia2cityscapes'\nname_architecture = 'daformer_sepaspp_mitb5'\nname_encoder = 'mitb5'\nname_decoder = 'daformer_sepaspp'\nname_uda = 'dacs_a999_fdthings_rcs0.01_cpl'\nname_opt = 'adamw_6e-05_pmTrue_poly10warm_1x2_40k'\nwork_dir = 'work_dirs/local-exp7/230719_0652_syn2cs_dacs_a999_fdthings_rcs001_cpl_daformer_sepaspp_mitb5_poly10warm_s1_432fe'\ngit_rev = '6d87ab857665f3c5a4b481c1da3fb5e227792830'\ngpu_ids = range(0, 1)\n", "CLASSES": ["road", "sidewalk", "building", "wall", "fence", "pole", "traffic light", "traffic sign", "vegetation", "terrain", "sky", "person", "rider", "car", "truck", "bus", "train", "motorcycle", "bicycle"], "PALETTE": [[128, 64, 128], [244, 35, 232], [70, 70, 70], [102, 102, 156], [190, 153, 153], [153, 153, 153], [250, 170, 30], [220, 220, 0], [107, 142, 35], [152, 251, 152], [70, 130, 180], [220, 20, 60], [255, 0, 0], [0, 0, 142], [0, 0, 70], [0, 60, 100], [0, 80, 100], [0, 0, 230], [119, 11, 32]]}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0, "memory": 9829, "data_time": 0.04204, "decode.loss_seg": 2.75273, "decode.acc_seg": 9.17869, "src.loss_imnet_feat_dist": 0.06789, "mix.decode.loss_seg": 1.45141, "mix.decode.acc_seg": 13.69052, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 18.52191, "time": 1.41885}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.0, "memory": 9829, "data_time": 0.02307, "decode.loss_seg": 2.55533, "decode.acc_seg": 44.5003, "src.loss_imnet_feat_dist": 0.06697, "mix.decode.loss_seg": 1.25968, "mix.decode.acc_seg": 32.72263, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 24.62733, "time": 1.34287}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 1e-05, "memory": 9829, "data_time": 0.02281, "decode.loss_seg": 2.12924, "decode.acc_seg": 60.1434, "src.loss_imnet_feat_dist": 0.08353, "mix.decode.loss_seg": 1.12734, "mix.decode.acc_seg": 52.05862, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 49.02489, "time": 1.34387}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 1e-05, "memory": 9829, "data_time": 0.02506, "decode.loss_seg": 1.68093, "decode.acc_seg": 66.46692, "src.loss_imnet_feat_dist": 0.09868, "mix.decode.loss_seg": 0.88529, "mix.decode.acc_seg": 61.93881, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 67.2927, "time": 1.35784}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 1e-05, "memory": 9829, "data_time": 0.02335, "decode.loss_seg": 1.37973, "decode.acc_seg": 70.01594, "src.loss_imnet_feat_dist": 0.10411, "mix.decode.loss_seg": 0.64159, "mix.decode.acc_seg": 65.22169, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 74.73238, "time": 1.34504}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 1e-05, "memory": 9829, "data_time": 0.02458, "decode.loss_seg": 1.12655, "decode.acc_seg": 73.96744, "src.loss_imnet_feat_dist": 0.10539, "mix.decode.loss_seg": 0.54215, "mix.decode.acc_seg": 68.79258, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 76.86604, "time": 1.35156}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 1e-05, "memory": 9829, "data_time": 0.02422, "decode.loss_seg": 0.97718, "decode.acc_seg": 74.27625, "src.loss_imnet_feat_dist": 0.11672, "mix.decode.loss_seg": 0.50671, "mix.decode.acc_seg": 67.4916, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 77.88942, "time": 1.34953}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 2e-05, "memory": 9829, "data_time": 0.02422, "decode.loss_seg": 0.87708, "decode.acc_seg": 74.80848, "src.loss_imnet_feat_dist": 0.11383, "mix.decode.loss_seg": 0.42423, "mix.decode.acc_seg": 67.97039, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 77.00496, "time": 1.35262}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 2e-05, "memory": 9829, "data_time": 0.02347, "decode.loss_seg": 0.75324, "decode.acc_seg": 76.78707, "src.loss_imnet_feat_dist": 0.12335, "mix.decode.loss_seg": 0.40192, "mix.decode.acc_seg": 68.2515, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 76.56473, "time": 1.34259}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 2e-05, "memory": 9829, "data_time": 0.02274, "decode.loss_seg": 0.6931, "decode.acc_seg": 77.45356, "src.loss_imnet_feat_dist": 0.11419, "mix.decode.loss_seg": 0.38275, "mix.decode.acc_seg": 70.92371, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 80.56301, "time": 1.34193}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 2e-05, "memory": 9829, "data_time": 0.02359, "decode.loss_seg": 0.64113, "decode.acc_seg": 78.1612, "src.loss_imnet_feat_dist": 0.12061, "mix.decode.loss_seg": 0.3323, "mix.decode.acc_seg": 67.61674, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 77.7774, "time": 1.34813}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 2e-05, "memory": 9829, "data_time": 0.02275, "decode.loss_seg": 0.59185, "decode.acc_seg": 79.42663, "src.loss_imnet_feat_dist": 0.11952, "mix.decode.loss_seg": 0.31605, "mix.decode.acc_seg": 70.23528, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 78.74305, "time": 1.34411}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 3e-05, "memory": 9829, "data_time": 0.02175, "decode.loss_seg": 0.52674, "decode.acc_seg": 81.18395, "src.loss_imnet_feat_dist": 0.11463, "mix.decode.loss_seg": 0.24134, "mix.decode.acc_seg": 70.89277, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 79.38492, "time": 1.33316}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 3e-05, "memory": 9829, "data_time": 0.02171, "decode.loss_seg": 0.50301, "decode.acc_seg": 81.6603, "src.loss_imnet_feat_dist": 0.12128, "mix.decode.loss_seg": 0.28222, "mix.decode.acc_seg": 70.30321, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 77.87506, "time": 1.33341}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 3e-05, "memory": 9829, "data_time": 0.0218, "decode.loss_seg": 0.45621, "decode.acc_seg": 82.41765, "src.loss_imnet_feat_dist": 0.11628, "mix.decode.loss_seg": 0.21721, "mix.decode.acc_seg": 70.92224, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 79.93532, "time": 1.33293}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 3e-05, "memory": 9829, "data_time": 0.02226, "decode.loss_seg": 0.4309, "decode.acc_seg": 81.83112, "src.loss_imnet_feat_dist": 0.129, "mix.decode.loss_seg": 0.23337, "mix.decode.acc_seg": 72.36332, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 77.1362, "time": 1.33307}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 3e-05, "memory": 9829, "data_time": 0.02186, "decode.loss_seg": 0.41407, "decode.acc_seg": 84.23198, "src.loss_imnet_feat_dist": 0.12433, "mix.decode.loss_seg": 0.2151, "mix.decode.acc_seg": 71.08275, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 76.70304, "time": 1.33267}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 4e-05, "memory": 9829, "data_time": 0.02173, "decode.loss_seg": 0.44886, "decode.acc_seg": 81.68193, "src.loss_imnet_feat_dist": 0.12511, "mix.decode.loss_seg": 0.21219, "mix.decode.acc_seg": 70.63914, "consistency.decode.loss_seg": 1e-05, "consistency.decode.acc_seg": 73.02536, "time": 1.33565}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 4e-05, "memory": 9829, "data_time": 0.02212, "decode.loss_seg": 0.3859, "decode.acc_seg": 84.21136, "src.loss_imnet_feat_dist": 0.1271, "mix.decode.loss_seg": 0.21347, "mix.decode.acc_seg": 73.64323, "consistency.decode.loss_seg": 2e-05, "consistency.decode.acc_seg": 79.14516, "time": 1.33478}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 4e-05, "memory": 9829, "data_time": 0.02188, "decode.loss_seg": 0.34981, "decode.acc_seg": 84.9195, "src.loss_imnet_feat_dist": 0.11981, "mix.decode.loss_seg": 0.20213, "mix.decode.acc_seg": 73.96777, "consistency.decode.loss_seg": 1e-05, "consistency.decode.acc_seg": 77.30067, "time": 1.33415}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 4e-05, "memory": 9829, "data_time": 0.02144, "decode.loss_seg": 0.3381, "decode.acc_seg": 84.36024, "src.loss_imnet_feat_dist": 0.11801, "mix.decode.loss_seg": 0.20695, "mix.decode.acc_seg": 74.15789, "consistency.decode.loss_seg": 1e-05, "consistency.decode.acc_seg": 82.29008, "time": 1.35741}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 4e-05, "memory": 9829, "data_time": 0.02172, "decode.loss_seg": 0.33509, "decode.acc_seg": 84.1847, "src.loss_imnet_feat_dist": 0.12194, "mix.decode.loss_seg": 0.18214, "mix.decode.acc_seg": 75.23255, "consistency.decode.loss_seg": 3e-05, "consistency.decode.acc_seg": 82.69978, "time": 1.33277}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 4e-05, "memory": 9829, "data_time": 0.0219, "decode.loss_seg": 0.40656, "decode.acc_seg": 82.90896, "src.loss_imnet_feat_dist": 0.13083, "mix.decode.loss_seg": 0.27714, "mix.decode.acc_seg": 72.07765, "consistency.decode.loss_seg": 3e-05, "consistency.decode.acc_seg": 80.63301, "time": 1.33477}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 5e-05, "memory": 9829, "data_time": 0.02196, "decode.loss_seg": 0.3584, "decode.acc_seg": 84.04215, "src.loss_imnet_feat_dist": 0.13149, "mix.decode.loss_seg": 0.22086, "mix.decode.acc_seg": 74.7875, "consistency.decode.loss_seg": 7e-05, "consistency.decode.acc_seg": 78.78106, "time": 1.34224}
{"mode": "train", "epoch": 1, "iter": 1250, "lr": 5e-05, "memory": 9829, "data_time": 0.02192, "decode.loss_seg": 0.31457, "decode.acc_seg": 86.15663, "src.loss_imnet_feat_dist": 0.12686, "mix.decode.loss_seg": 0.19058, "mix.decode.acc_seg": 76.32195, "consistency.decode.loss_seg": 0.00012, "consistency.decode.acc_seg": 81.66195, "time": 1.33762}
{"mode": "train", "epoch": 1, "iter": 1300, "lr": 5e-05, "memory": 9829, "data_time": 0.02173, "decode.loss_seg": 0.31998, "decode.acc_seg": 86.13972, "src.loss_imnet_feat_dist": 0.12675, "mix.decode.loss_seg": 0.19638, "mix.decode.acc_seg": 78.33126, "consistency.decode.loss_seg": 7e-05, "consistency.decode.acc_seg": 83.30889, "time": 1.33555}
{"mode": "train", "epoch": 1, "iter": 1350, "lr": 5e-05, "memory": 9829, "data_time": 0.02184, "decode.loss_seg": 0.33054, "decode.acc_seg": 85.32698, "src.loss_imnet_feat_dist": 0.12798, "mix.decode.loss_seg": 0.21187, "mix.decode.acc_seg": 75.94083, "consistency.decode.loss_seg": 0.00029, "consistency.decode.acc_seg": 81.74921, "time": 1.33495}
{"mode": "train", "epoch": 1, "iter": 1400, "lr": 5e-05, "memory": 9829, "data_time": 0.02175, "decode.loss_seg": 0.34979, "decode.acc_seg": 84.03288, "src.loss_imnet_feat_dist": 0.12775, "mix.decode.loss_seg": 0.24037, "mix.decode.acc_seg": 74.41635, "consistency.decode.loss_seg": 0.00073, "consistency.decode.acc_seg": 79.55274, "time": 1.33742}
{"mode": "train", "epoch": 1, "iter": 1450, "lr": 6e-05, "memory": 9829, "data_time": 0.02218, "decode.loss_seg": 0.30145, "decode.acc_seg": 86.04871, "src.loss_imnet_feat_dist": 0.12806, "mix.decode.loss_seg": 0.21917, "mix.decode.acc_seg": 77.69015, "consistency.decode.loss_seg": 0.00035, "consistency.decode.acc_seg": 85.01458, "time": 1.33708}
{"mode": "train", "epoch": 1, "iter": 1500, "lr": 6e-05, "memory": 9829, "data_time": 0.02182, "decode.loss_seg": 0.30211, "decode.acc_seg": 85.42345, "src.loss_imnet_feat_dist": 0.13401, "mix.decode.loss_seg": 0.20653, "mix.decode.acc_seg": 79.38991, "consistency.decode.loss_seg": 0.00032, "consistency.decode.acc_seg": 84.25229, "time": 1.3379}
{"mode": "train", "epoch": 1, "iter": 1550, "lr": 6e-05, "memory": 9829, "data_time": 0.02205, "decode.loss_seg": 0.31822, "decode.acc_seg": 85.49858, "src.loss_imnet_feat_dist": 0.12593, "mix.decode.loss_seg": 0.20757, "mix.decode.acc_seg": 78.41563, "consistency.decode.loss_seg": 0.00039, "consistency.decode.acc_seg": 83.99588, "time": 1.33783}
{"mode": "train", "epoch": 1, "iter": 1600, "lr": 6e-05, "memory": 9829, "data_time": 0.02451, "decode.loss_seg": 0.30182, "decode.acc_seg": 85.4211, "src.loss_imnet_feat_dist": 0.13187, "mix.decode.loss_seg": 0.20002, "mix.decode.acc_seg": 78.17751, "consistency.decode.loss_seg": 0.00048, "consistency.decode.acc_seg": 81.94368, "time": 1.34565}
{"mode": "train", "epoch": 1, "iter": 1650, "lr": 6e-05, "memory": 9829, "data_time": 0.02294, "decode.loss_seg": 0.27253, "decode.acc_seg": 86.50803, "src.loss_imnet_feat_dist": 0.12827, "mix.decode.loss_seg": 0.18796, "mix.decode.acc_seg": 80.03376, "consistency.decode.loss_seg": 0.00041, "consistency.decode.acc_seg": 86.6897, "time": 1.34105}
{"mode": "train", "epoch": 1, "iter": 1700, "lr": 6e-05, "memory": 9829, "data_time": 0.02226, "decode.loss_seg": 0.30063, "decode.acc_seg": 85.04832, "src.loss_imnet_feat_dist": 0.13684, "mix.decode.loss_seg": 0.23622, "mix.decode.acc_seg": 79.6776, "consistency.decode.loss_seg": 0.00084, "consistency.decode.acc_seg": 85.29739, "time": 1.32747}
{"mode": "train", "epoch": 1, "iter": 1750, "lr": 6e-05, "memory": 9829, "data_time": 0.02308, "decode.loss_seg": 0.24445, "decode.acc_seg": 85.95026, "src.loss_imnet_feat_dist": 0.13462, "mix.decode.loss_seg": 0.16824, "mix.decode.acc_seg": 82.11384, "consistency.decode.loss_seg": 0.00061, "consistency.decode.acc_seg": 88.04485, "time": 1.34133}
{"mode": "train", "epoch": 1, "iter": 1800, "lr": 6e-05, "memory": 9829, "data_time": 0.0241, "decode.loss_seg": 0.25236, "decode.acc_seg": 87.17615, "src.loss_imnet_feat_dist": 0.12932, "mix.decode.loss_seg": 0.19693, "mix.decode.acc_seg": 81.9748, "consistency.decode.loss_seg": 0.00057, "consistency.decode.acc_seg": 87.35048, "time": 1.35537}
{"mode": "train", "epoch": 1, "iter": 1850, "lr": 6e-05, "memory": 9829, "data_time": 0.02516, "decode.loss_seg": 0.24487, "decode.acc_seg": 87.17796, "src.loss_imnet_feat_dist": 0.1222, "mix.decode.loss_seg": 0.19558, "mix.decode.acc_seg": 81.74662, "consistency.decode.loss_seg": 0.00114, "consistency.decode.acc_seg": 87.79095, "time": 1.36594}
{"mode": "train", "epoch": 1, "iter": 1900, "lr": 6e-05, "memory": 9829, "data_time": 0.0248, "decode.loss_seg": 0.24967, "decode.acc_seg": 86.17549, "src.loss_imnet_feat_dist": 0.1226, "mix.decode.loss_seg": 0.19295, "mix.decode.acc_seg": 81.39359, "consistency.decode.loss_seg": 0.00095, "consistency.decode.acc_seg": 87.71396, "time": 1.35993}
{"mode": "train", "epoch": 1, "iter": 1950, "lr": 6e-05, "memory": 9829, "data_time": 0.02372, "decode.loss_seg": 0.22187, "decode.acc_seg": 86.40435, "src.loss_imnet_feat_dist": 0.12777, "mix.decode.loss_seg": 0.17981, "mix.decode.acc_seg": 82.17268, "consistency.decode.loss_seg": 0.00081, "consistency.decode.acc_seg": 88.53423, "time": 1.35501}
{"mode": "train", "epoch": 1, "iter": 2000, "lr": 6e-05, "memory": 9829, "data_time": 0.02366, "decode.loss_seg": 0.22695, "decode.acc_seg": 88.10025, "src.loss_imnet_feat_dist": 0.13179, "mix.decode.loss_seg": 0.18627, "mix.decode.acc_seg": 83.73745, "consistency.decode.loss_seg": 0.00151, "consistency.decode.acc_seg": 88.53621, "time": 1.3423}
{"mode": "train", "epoch": 1, "iter": 2050, "lr": 6e-05, "memory": 9829, "data_time": 0.02311, "decode.loss_seg": 0.23772, "decode.acc_seg": 87.14403, "src.loss_imnet_feat_dist": 0.11976, "mix.decode.loss_seg": 0.24338, "mix.decode.acc_seg": 80.85292, "consistency.decode.loss_seg": 0.00202, "consistency.decode.acc_seg": 87.6787, "time": 1.3782}
{"mode": "train", "epoch": 1, "iter": 2100, "lr": 6e-05, "memory": 9829, "data_time": 0.02275, "decode.loss_seg": 0.2381, "decode.acc_seg": 87.28608, "src.loss_imnet_feat_dist": 0.13141, "mix.decode.loss_seg": 0.22624, "mix.decode.acc_seg": 82.61105, "consistency.decode.loss_seg": 0.00185, "consistency.decode.acc_seg": 88.29831, "time": 1.34903}
{"mode": "train", "epoch": 1, "iter": 2150, "lr": 6e-05, "memory": 9829, "data_time": 0.0228, "decode.loss_seg": 0.24504, "decode.acc_seg": 88.03163, "src.loss_imnet_feat_dist": 0.12776, "mix.decode.loss_seg": 0.22066, "mix.decode.acc_seg": 82.84074, "consistency.decode.loss_seg": 0.00137, "consistency.decode.acc_seg": 88.8539, "time": 1.33219}
{"mode": "train", "epoch": 1, "iter": 2200, "lr": 6e-05, "memory": 9829, "data_time": 0.0234, "decode.loss_seg": 0.26154, "decode.acc_seg": 86.4874, "src.loss_imnet_feat_dist": 0.13285, "mix.decode.loss_seg": 0.22775, "mix.decode.acc_seg": 82.93993, "consistency.decode.loss_seg": 0.00385, "consistency.decode.acc_seg": 86.3275, "time": 1.33472}
{"mode": "train", "epoch": 1, "iter": 2250, "lr": 6e-05, "memory": 9829, "data_time": 0.02382, "decode.loss_seg": 0.21258, "decode.acc_seg": 88.58651, "src.loss_imnet_feat_dist": 0.12235, "mix.decode.loss_seg": 0.19911, "mix.decode.acc_seg": 84.81673, "consistency.decode.loss_seg": 0.00157, "consistency.decode.acc_seg": 88.52053, "time": 1.34163}
{"mode": "train", "epoch": 1, "iter": 2300, "lr": 6e-05, "memory": 9829, "data_time": 0.02431, "decode.loss_seg": 0.23227, "decode.acc_seg": 88.20104, "src.loss_imnet_feat_dist": 0.12406, "mix.decode.loss_seg": 0.2054, "mix.decode.acc_seg": 84.58921, "consistency.decode.loss_seg": 0.00176, "consistency.decode.acc_seg": 88.09319, "time": 1.35264}
{"mode": "train", "epoch": 1, "iter": 2350, "lr": 6e-05, "memory": 9829, "data_time": 0.02378, "decode.loss_seg": 0.21979, "decode.acc_seg": 87.84849, "src.loss_imnet_feat_dist": 0.12429, "mix.decode.loss_seg": 0.20886, "mix.decode.acc_seg": 83.47626, "consistency.decode.loss_seg": 0.00145, "consistency.decode.acc_seg": 89.00009, "time": 1.34098}
{"mode": "train", "epoch": 1, "iter": 2400, "lr": 6e-05, "memory": 9829, "data_time": 0.02339, "decode.loss_seg": 0.30426, "decode.acc_seg": 84.92313, "src.loss_imnet_feat_dist": 0.12768, "mix.decode.loss_seg": 0.31542, "mix.decode.acc_seg": 80.39214, "consistency.decode.loss_seg": 0.0102, "consistency.decode.acc_seg": 86.30817, "time": 1.34115}
{"mode": "train", "epoch": 1, "iter": 2450, "lr": 6e-05, "memory": 9829, "data_time": 0.02312, "decode.loss_seg": 0.26044, "decode.acc_seg": 86.46205, "src.loss_imnet_feat_dist": NaN, "mix.decode.loss_seg": 0.23523, "mix.decode.acc_seg": 82.87328, "consistency.decode.loss_seg": 0.00421, "consistency.decode.acc_seg": 88.73105, "time": 1.33861}
{"mode": "train", "epoch": 1, "iter": 2500, "lr": 6e-05, "memory": 9829, "data_time": 0.0245, "decode.loss_seg": 0.23819, "decode.acc_seg": 87.52262, "src.loss_imnet_feat_dist": 0.12702, "mix.decode.loss_seg": 0.23331, "mix.decode.acc_seg": 83.59119, "consistency.decode.loss_seg": 0.0023, "consistency.decode.acc_seg": 89.55078, "time": 1.34601}
{"mode": "train", "epoch": 1, "iter": 2550, "lr": 6e-05, "memory": 9829, "data_time": 0.02415, "decode.loss_seg": 0.23356, "decode.acc_seg": 86.72301, "src.loss_imnet_feat_dist": 0.12167, "mix.decode.loss_seg": 0.21746, "mix.decode.acc_seg": 83.72925, "consistency.decode.loss_seg": 0.00245, "consistency.decode.acc_seg": 90.16413, "time": 1.34287}
{"mode": "train", "epoch": 1, "iter": 2600, "lr": 6e-05, "memory": 9829, "data_time": 0.02406, "decode.loss_seg": 0.22895, "decode.acc_seg": 87.28146, "src.loss_imnet_feat_dist": 0.12653, "mix.decode.loss_seg": 0.22916, "mix.decode.acc_seg": 83.49532, "consistency.decode.loss_seg": 0.00276, "consistency.decode.acc_seg": 89.80846, "time": 1.35339}
{"mode": "train", "epoch": 1, "iter": 2650, "lr": 6e-05, "memory": 9829, "data_time": 0.02297, "decode.loss_seg": 0.23977, "decode.acc_seg": 87.9252, "src.loss_imnet_feat_dist": 0.12961, "mix.decode.loss_seg": 0.24773, "mix.decode.acc_seg": 83.68275, "consistency.decode.loss_seg": 0.00288, "consistency.decode.acc_seg": 89.28047, "time": 1.33557}
{"mode": "train", "epoch": 1, "iter": 2700, "lr": 6e-05, "memory": 9829, "data_time": 0.02442, "decode.loss_seg": 0.23389, "decode.acc_seg": 87.00063, "src.loss_imnet_feat_dist": 0.12372, "mix.decode.loss_seg": 0.25146, "mix.decode.acc_seg": 84.36565, "consistency.decode.loss_seg": 0.00366, "consistency.decode.acc_seg": 89.71554, "time": 1.35367}
{"mode": "train", "epoch": 1, "iter": 2750, "lr": 6e-05, "memory": 9829, "data_time": 0.02321, "decode.loss_seg": 0.19449, "decode.acc_seg": 87.83046, "src.loss_imnet_feat_dist": 0.12763, "mix.decode.loss_seg": 0.19218, "mix.decode.acc_seg": 86.26159, "consistency.decode.loss_seg": 0.00245, "consistency.decode.acc_seg": 91.89658, "time": 1.34609}
{"mode": "train", "epoch": 1, "iter": 2800, "lr": 6e-05, "memory": 9829, "data_time": 0.02306, "decode.loss_seg": 0.19787, "decode.acc_seg": 88.71534, "src.loss_imnet_feat_dist": 0.12774, "mix.decode.loss_seg": 0.18781, "mix.decode.acc_seg": 86.5048, "consistency.decode.loss_seg": 0.00191, "consistency.decode.acc_seg": 91.28485, "time": 1.34286}
{"mode": "train", "epoch": 1, "iter": 2850, "lr": 6e-05, "memory": 9829, "data_time": 0.02445, "decode.loss_seg": 0.21562, "decode.acc_seg": 87.74412, "src.loss_imnet_feat_dist": 0.1257, "mix.decode.loss_seg": 0.20203, "mix.decode.acc_seg": 85.69339, "consistency.decode.loss_seg": 0.00188, "consistency.decode.acc_seg": 91.91845, "time": 1.34445}
{"mode": "train", "epoch": 1, "iter": 2900, "lr": 6e-05, "memory": 9829, "data_time": 0.02456, "decode.loss_seg": 0.22364, "decode.acc_seg": 87.66615, "src.loss_imnet_feat_dist": 0.13141, "mix.decode.loss_seg": 0.23793, "mix.decode.acc_seg": 84.29748, "consistency.decode.loss_seg": 0.00411, "consistency.decode.acc_seg": 89.7274, "time": 1.34901}
{"mode": "train", "epoch": 1, "iter": 2950, "lr": 6e-05, "memory": 9829, "data_time": 0.02369, "decode.loss_seg": 0.19057, "decode.acc_seg": 88.61903, "src.loss_imnet_feat_dist": 0.12019, "mix.decode.loss_seg": 0.20516, "mix.decode.acc_seg": 86.35474, "consistency.decode.loss_seg": 0.00302, "consistency.decode.acc_seg": 90.4972, "time": 1.34003}
{"mode": "train", "epoch": 1, "iter": 3000, "lr": 6e-05, "memory": 9829, "data_time": 0.02392, "decode.loss_seg": 0.21612, "decode.acc_seg": 88.2225, "src.loss_imnet_feat_dist": 0.13052, "mix.decode.loss_seg": 0.21142, "mix.decode.acc_seg": 86.18197, "consistency.decode.loss_seg": 0.00253, "consistency.decode.acc_seg": 91.72842, "time": 1.34298}
{"mode": "train", "epoch": 1, "iter": 3050, "lr": 6e-05, "memory": 9829, "data_time": 0.02469, "decode.loss_seg": 0.20141, "decode.acc_seg": 88.53513, "src.loss_imnet_feat_dist": 0.12086, "mix.decode.loss_seg": 0.19269, "mix.decode.acc_seg": 85.92152, "consistency.decode.loss_seg": 0.00348, "consistency.decode.acc_seg": 91.22093, "time": 1.38565}
{"mode": "train", "epoch": 1, "iter": 3100, "lr": 6e-05, "memory": 9829, "data_time": 0.02396, "decode.loss_seg": 0.20313, "decode.acc_seg": 88.09038, "src.loss_imnet_feat_dist": 0.12086, "mix.decode.loss_seg": 0.20867, "mix.decode.acc_seg": 84.72719, "consistency.decode.loss_seg": 0.00215, "consistency.decode.acc_seg": 92.2688, "time": 1.35501}
{"mode": "train", "epoch": 1, "iter": 3150, "lr": 6e-05, "memory": 9829, "data_time": 0.0227, "decode.loss_seg": 0.25902, "decode.acc_seg": 87.43982, "src.loss_imnet_feat_dist": 0.13022, "mix.decode.loss_seg": 0.24129, "mix.decode.acc_seg": 82.7356, "consistency.decode.loss_seg": 0.01934, "consistency.decode.acc_seg": 86.31464, "time": 1.34843}
