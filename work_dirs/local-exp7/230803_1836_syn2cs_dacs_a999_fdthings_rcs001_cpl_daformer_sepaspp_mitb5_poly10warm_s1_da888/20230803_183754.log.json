{"env_info": "sys.platform: linux\nPython: 3.6.9 (default, Jan 26 2021, 15:33:00) [GCC 8.4.0]\nCUDA available: True\nGPU 0: Tesla V100-SXM2-16GB\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 10.2, V10.2.89\nGCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\nPyTorch: 1.8.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 10.2\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70\n  - CuDNN 7.6.5\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.9.0\nOpenCV: 4.4.0\nMMCV: 1.3.7\nMMCV Compiler: GCC 7.5\nMMCV CUDA Compiler: 10.2\nMMSegmentation: 0.16.0+6d87ab8", "seed": 1, "exp_name": "230803_1836_syn2cs_dacs_a999_fdthings_rcs001_cpl_daformer_sepaspp_mitb5_poly10warm_s1_da888", "mmseg_version": "0.16.0+6d87ab8", "config": "log_config = dict(\n    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\ncudnn_benchmark = True\nnorm_cfg = dict(type='BN', requires_grad=True)\nfind_unused_parameters = True\nmodel = dict(\n    type='EncoderDecoder',\n    pretrained='pretrained/mit_b5.pth',\n    backbone=dict(type='mit_b5', style='pytorch'),\n    decode_head=dict(\n        type='DAFormerHead',\n        in_channels=[64, 128, 320, 512],\n        in_index=[0, 1, 2, 3],\n        channels=256,\n        dropout_ratio=0.1,\n        num_classes=19,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        align_corners=False,\n        decoder_params=dict(\n            embed_dims=256,\n            embed_cfg=dict(type='mlp', act_cfg=None, norm_cfg=None),\n            embed_neck_cfg=dict(type='mlp', act_cfg=None, norm_cfg=None),\n            fusion_cfg=dict(\n                type='aspp',\n                sep=True,\n                dilations=(1, 6, 12, 18),\n                pool=False,\n                act_cfg=dict(type='ReLU'),\n                norm_cfg=dict(type='BN', requires_grad=True))),\n        loss_decode=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),\n    train_cfg=dict(\n        work_dir=\n        'work_dirs/local-exp7/230803_1836_syn2cs_dacs_a999_fdthings_rcs001_cpl_daformer_sepaspp_mitb5_poly10warm_s1_da888'\n    ),\n    test_cfg=dict(mode='whole'))\ndataset_type = 'CityscapesDataset'\ndata_root = 'data/cityscapes/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ncrop_size = (512, 512)\nsynthia_train_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations'),\n    dict(type='Resize', img_scale=(1280, 760)),\n    dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),\n    dict(type='RandomFlip', prob=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n]\ncityscapes_train_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations'),\n    dict(type='Resize', img_scale=(1024, 512)),\n    dict(type='RandomCrop', crop_size=(512, 512)),\n    dict(type='RandomFlip', prob=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1024, 512),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=4,\n    train=dict(\n        type='UDADataset',\n        source=dict(\n            type='SynthiaDataset',\n            data_root='data/synthia/',\n            img_dir='RGB',\n            ann_dir='GT/LABELS',\n            pipeline=[\n                dict(type='LoadImageFromFile'),\n                dict(type='LoadAnnotations'),\n                dict(type='Resize', img_scale=(1280, 760)),\n                dict(\n                    type='RandomCrop',\n                    crop_size=(512, 512),\n                    cat_max_ratio=0.75),\n                dict(type='RandomFlip', prob=0.5),\n                dict(\n                    type='Normalize',\n                    mean=[123.675, 116.28, 103.53],\n                    std=[58.395, 57.12, 57.375],\n                    to_rgb=True),\n                dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),\n                dict(type='DefaultFormatBundle'),\n                dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n            ]),\n        target=dict(\n            type='CityscapesDataset',\n            data_root='data/cityscapes/',\n            img_dir='leftImg8bit/train',\n            ann_dir='gtFine/train',\n            pipeline=[\n                dict(type='LoadImageFromFile'),\n                dict(type='LoadAnnotations'),\n                dict(type='Resize', img_scale=(1024, 512)),\n                dict(type='RandomCrop', crop_size=(512, 512)),\n                dict(type='RandomFlip', prob=0.5),\n                dict(\n                    type='Normalize',\n                    mean=[123.675, 116.28, 103.53],\n                    std=[58.395, 57.12, 57.375],\n                    to_rgb=True),\n                dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),\n                dict(type='DefaultFormatBundle'),\n                dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n            ]),\n        rare_class_sampling=dict(\n            min_pixels=3000, class_temp=0.01, min_crop_ratio=0.5)),\n    val=dict(\n        type='CityscapesDataset',\n        data_root='data/cityscapes/',\n        img_dir='leftImg8bit/val',\n        ann_dir='gtFine/val',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1024, 512),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='CityscapesDataset',\n        data_root='data/cityscapes/',\n        img_dir='leftImg8bit/val',\n        ann_dir='gtFine/val',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1024, 512),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nuda = dict(\n    type='DACS',\n    alpha=0.999,\n    pseudo_threshold=0.968,\n    pseudo_weight_ignore_top=15,\n    pseudo_weight_ignore_bottom=120,\n    imnet_feature_dist_lambda=0.005,\n    imnet_feature_dist_classes=[6, 7, 11, 12, 13, 14, 15, 16, 17, 18],\n    imnet_feature_dist_scale_min_ratio=0.75,\n    mix='class',\n    blur=True,\n    color_jitter_strength=0.2,\n    color_jitter_probability=0.2,\n    debug_img_interval=1000,\n    print_grad_magnitude=False,\n    tar_aug='weak_strong',\n    weight=1,\n    dropout=True,\n    thre='same',\n    model=dict(\n        type='EncoderDecoder',\n        pretrained='pretrained/mit_b5.pth',\n        backbone=dict(type='mit_b5', style='pytorch'),\n        decode_head=dict(\n            type='DAFormerHead',\n            in_channels=[64, 128, 320, 512],\n            in_index=[0, 1, 2, 3],\n            channels=256,\n            dropout_ratio=0.1,\n            num_classes=19,\n            norm_cfg=dict(type='BN', requires_grad=True),\n            align_corners=False,\n            decoder_params=dict(\n                embed_dims=256,\n                embed_cfg=dict(type='mlp', act_cfg=None, norm_cfg=None),\n                embed_neck_cfg=dict(type='mlp', act_cfg=None, norm_cfg=None),\n                fusion_cfg=dict(\n                    type='aspp',\n                    sep=True,\n                    dilations=(1, 6, 12, 18),\n                    pool=False,\n                    act_cfg=dict(type='ReLU'),\n                    norm_cfg=dict(type='BN', requires_grad=True))),\n            loss_decode=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),\n        train_cfg=dict(\n            work_dir=\n            'work_dirs/local-exp7/230803_1836_syn2cs_dacs_a999_fdthings_rcs001_cpl_daformer_sepaspp_mitb5_poly10warm_s1_da888'\n        ),\n        test_cfg=dict(mode='whole')),\n    max_iters=40000)\nuse_ddp_wrapper = True\noptimizer = dict(\n    type='AdamW',\n    lr=6e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.01,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            head=dict(lr_mult=10.0),\n            pos_block=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = None\nlr_config = dict(\n    policy='poly',\n    warmup='linear',\n    warmup_iters=1500,\n    warmup_ratio=1e-06,\n    power=1.0,\n    min_lr=0.0,\n    by_epoch=False)\nn_gpus = 1\nseed = 1\nrunner = dict(type='IterBasedRunner', max_iters=40000)\ncheckpoint_config = dict(by_epoch=False, interval=40000, max_keep_ckpts=1)\nevaluation = dict(interval=4000, metric='mIoU')\nname = '230803_1836_syn2cs_dacs_a999_fdthings_rcs001_cpl_daformer_sepaspp_mitb5_poly10warm_s1_da888'\nexp = 7\nname_dataset = 'synthia2cityscapes'\nname_architecture = 'daformer_sepaspp_mitb5'\nname_encoder = 'mitb5'\nname_decoder = 'daformer_sepaspp'\nname_uda = 'dacs_a999_fdthings_rcs0.01_cpl'\nname_opt = 'adamw_6e-05_pmTrue_poly10warm_1x2_40k'\nwork_dir = 'work_dirs/local-exp7/230803_1836_syn2cs_dacs_a999_fdthings_rcs001_cpl_daformer_sepaspp_mitb5_poly10warm_s1_da888'\ngit_rev = '6d87ab857665f3c5a4b481c1da3fb5e227792830'\ngpu_ids = range(0, 1)\n", "CLASSES": ["road", "sidewalk", "building", "wall", "fence", "pole", "traffic light", "traffic sign", "vegetation", "terrain", "sky", "person", "rider", "car", "truck", "bus", "train", "motorcycle", "bicycle"], "PALETTE": [[128, 64, 128], [244, 35, 232], [70, 70, 70], [102, 102, 156], [190, 153, 153], [153, 153, 153], [250, 170, 30], [220, 220, 0], [107, 142, 35], [152, 251, 152], [70, 130, 180], [220, 20, 60], [255, 0, 0], [0, 0, 142], [0, 0, 70], [0, 60, 100], [0, 80, 100], [0, 0, 230], [119, 11, 32]]}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0, "memory": 9810, "data_time": 0.04639, "decode.loss_seg": 2.74952, "decode.acc_seg": 9.52607, "src.loss_imnet_feat_dist": 0.06773, "mix.decode.loss_seg": 1.39579, "mix.decode.acc_seg": 13.31912, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 17.37859, "time": 1.44003}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.0, "memory": 9810, "data_time": 0.02195, "decode.loss_seg": 2.55198, "decode.acc_seg": 44.18242, "src.loss_imnet_feat_dist": 0.06628, "mix.decode.loss_seg": 1.35421, "mix.decode.acc_seg": 33.66746, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 23.47402, "time": 1.34404}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 1e-05, "memory": 9810, "data_time": 0.02244, "decode.loss_seg": 2.12638, "decode.acc_seg": 59.04728, "src.loss_imnet_feat_dist": 0.0767, "mix.decode.loss_seg": 1.14994, "mix.decode.acc_seg": 53.10051, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 51.16049, "time": 1.35202}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 1e-05, "memory": 9810, "data_time": 0.02137, "decode.loss_seg": 1.6826, "decode.acc_seg": 66.01347, "src.loss_imnet_feat_dist": 0.09728, "mix.decode.loss_seg": 0.84402, "mix.decode.acc_seg": 61.38068, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 68.94563, "time": 1.33557}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 1e-05, "memory": 9810, "data_time": 0.02149, "decode.loss_seg": 1.3868, "decode.acc_seg": 69.90184, "src.loss_imnet_feat_dist": 0.09977, "mix.decode.loss_seg": 0.70299, "mix.decode.acc_seg": 66.81692, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 76.1709, "time": 1.33729}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 1e-05, "memory": 9810, "data_time": 0.02131, "decode.loss_seg": 1.12498, "decode.acc_seg": 73.96881, "src.loss_imnet_feat_dist": 0.10656, "mix.decode.loss_seg": 0.55081, "mix.decode.acc_seg": 66.76118, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 75.46691, "time": 1.3303}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 1e-05, "memory": 9810, "data_time": 0.02135, "decode.loss_seg": 0.97725, "decode.acc_seg": 74.30632, "src.loss_imnet_feat_dist": 0.11441, "mix.decode.loss_seg": 0.47652, "mix.decode.acc_seg": 68.16306, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 76.91182, "time": 1.33284}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 2e-05, "memory": 9810, "data_time": 0.02052, "decode.loss_seg": 0.87229, "decode.acc_seg": 75.04727, "src.loss_imnet_feat_dist": 0.11324, "mix.decode.loss_seg": 0.38522, "mix.decode.acc_seg": 68.65063, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 75.79554, "time": 1.33106}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 2e-05, "memory": 9810, "data_time": 0.02048, "decode.loss_seg": 0.7564, "decode.acc_seg": 76.84452, "src.loss_imnet_feat_dist": 0.1218, "mix.decode.loss_seg": 0.41664, "mix.decode.acc_seg": 67.7985, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 76.32066, "time": 1.32969}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 2e-05, "memory": 9810, "data_time": 0.02046, "decode.loss_seg": 0.69756, "decode.acc_seg": 77.43916, "src.loss_imnet_feat_dist": 0.11675, "mix.decode.loss_seg": 0.36239, "mix.decode.acc_seg": 70.35939, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 78.31749, "time": 1.32835}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 2e-05, "memory": 9810, "data_time": 0.02014, "decode.loss_seg": 0.64755, "decode.acc_seg": 78.0281, "src.loss_imnet_feat_dist": 0.11887, "mix.decode.loss_seg": 0.34459, "mix.decode.acc_seg": 69.37566, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 75.7862, "time": 1.32881}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 2e-05, "memory": 9810, "data_time": 0.02061, "decode.loss_seg": 0.60099, "decode.acc_seg": 78.8876, "src.loss_imnet_feat_dist": 0.11867, "mix.decode.loss_seg": 0.31329, "mix.decode.acc_seg": 68.09372, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 74.29545, "time": 1.3373}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 3e-05, "memory": 9810, "data_time": 0.02083, "decode.loss_seg": 0.54181, "decode.acc_seg": 80.43075, "src.loss_imnet_feat_dist": 0.11522, "mix.decode.loss_seg": 0.28842, "mix.decode.acc_seg": 70.35968, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 75.49518, "time": 1.33505}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 3e-05, "memory": 9810, "data_time": 0.02029, "decode.loss_seg": 0.49835, "decode.acc_seg": 81.83474, "src.loss_imnet_feat_dist": 0.12036, "mix.decode.loss_seg": 0.27268, "mix.decode.acc_seg": 69.97929, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 76.25041, "time": 1.3342}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 3e-05, "memory": 9810, "data_time": 0.02021, "decode.loss_seg": 0.45182, "decode.acc_seg": 82.57222, "src.loss_imnet_feat_dist": 0.11383, "mix.decode.loss_seg": 0.22116, "mix.decode.acc_seg": 70.35586, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 78.52834, "time": 1.32993}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 3e-05, "memory": 9811, "data_time": 0.01959, "decode.loss_seg": 0.42223, "decode.acc_seg": 82.14954, "src.loss_imnet_feat_dist": 0.12225, "mix.decode.loss_seg": 0.22508, "mix.decode.acc_seg": 72.16615, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 78.07747, "time": 1.32424}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 3e-05, "memory": 9811, "data_time": 0.01927, "decode.loss_seg": 0.41838, "decode.acc_seg": 84.07496, "src.loss_imnet_feat_dist": 0.12351, "mix.decode.loss_seg": 0.27363, "mix.decode.acc_seg": 71.81542, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 75.41895, "time": 1.31888}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 4e-05, "memory": 9812, "data_time": 0.01921, "decode.loss_seg": 0.45902, "decode.acc_seg": 81.48788, "src.loss_imnet_feat_dist": 0.12771, "mix.decode.loss_seg": 0.26604, "mix.decode.acc_seg": 71.17422, "consistency.decode.loss_seg": 0.0, "consistency.decode.acc_seg": 75.07117, "time": 1.31864}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 4e-05, "memory": 9812, "data_time": 0.0191, "decode.loss_seg": 0.40521, "decode.acc_seg": 83.77483, "src.loss_imnet_feat_dist": 0.12534, "mix.decode.loss_seg": 0.20885, "mix.decode.acc_seg": 73.74995, "consistency.decode.loss_seg": 2e-05, "consistency.decode.acc_seg": 77.64001, "time": 1.31712}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 4e-05, "memory": 9812, "data_time": 0.01916, "decode.loss_seg": 0.35015, "decode.acc_seg": 84.79522, "src.loss_imnet_feat_dist": 0.11689, "mix.decode.loss_seg": 0.21451, "mix.decode.acc_seg": 72.61423, "consistency.decode.loss_seg": 1e-05, "consistency.decode.acc_seg": 75.45983, "time": 1.31848}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 4e-05, "memory": 9812, "data_time": 0.01969, "decode.loss_seg": 0.34366, "decode.acc_seg": 84.20618, "src.loss_imnet_feat_dist": 0.11749, "mix.decode.loss_seg": 0.1994, "mix.decode.acc_seg": 71.98551, "consistency.decode.loss_seg": 1e-05, "consistency.decode.acc_seg": 77.97787, "time": 1.3523}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 4e-05, "memory": 9812, "data_time": 0.01966, "decode.loss_seg": 0.33007, "decode.acc_seg": 84.47059, "src.loss_imnet_feat_dist": 0.1197, "mix.decode.loss_seg": 0.20344, "mix.decode.acc_seg": 73.11354, "consistency.decode.loss_seg": 2e-05, "consistency.decode.acc_seg": 80.09711, "time": 1.31866}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 4e-05, "memory": 9812, "data_time": 0.01951, "decode.loss_seg": 0.36504, "decode.acc_seg": 84.02259, "src.loss_imnet_feat_dist": 0.12227, "mix.decode.loss_seg": 0.19608, "mix.decode.acc_seg": 74.31192, "consistency.decode.loss_seg": 3e-05, "consistency.decode.acc_seg": 80.97074, "time": 1.31663}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 5e-05, "memory": 9812, "data_time": 0.01996, "decode.loss_seg": 0.35018, "decode.acc_seg": 84.4207, "src.loss_imnet_feat_dist": 0.12511, "mix.decode.loss_seg": 0.21489, "mix.decode.acc_seg": 72.65356, "consistency.decode.loss_seg": 7e-05, "consistency.decode.acc_seg": 78.44388, "time": 1.31989}
{"mode": "train", "epoch": 1, "iter": 1250, "lr": 5e-05, "memory": 9812, "data_time": 0.01974, "decode.loss_seg": 0.32836, "decode.acc_seg": 85.66243, "src.loss_imnet_feat_dist": 0.12884, "mix.decode.loss_seg": 0.23258, "mix.decode.acc_seg": 75.02541, "consistency.decode.loss_seg": 9e-05, "consistency.decode.acc_seg": 76.07486, "time": 1.31875}
{"mode": "train", "epoch": 1, "iter": 1300, "lr": 5e-05, "memory": 9812, "data_time": 0.0195, "decode.loss_seg": 0.33378, "decode.acc_seg": 85.53693, "src.loss_imnet_feat_dist": 0.13021, "mix.decode.loss_seg": 0.20369, "mix.decode.acc_seg": 77.47065, "consistency.decode.loss_seg": 0.00018, "consistency.decode.acc_seg": 79.33229, "time": 1.31797}
{"mode": "train", "epoch": 1, "iter": 1350, "lr": 5e-05, "memory": 9812, "data_time": 0.01966, "decode.loss_seg": 0.33224, "decode.acc_seg": 85.30779, "src.loss_imnet_feat_dist": 0.12677, "mix.decode.loss_seg": 0.225, "mix.decode.acc_seg": 76.84897, "consistency.decode.loss_seg": 0.00021, "consistency.decode.acc_seg": 79.1925, "time": 1.31746}
{"mode": "train", "epoch": 1, "iter": 1400, "lr": 5e-05, "memory": 9812, "data_time": 0.02048, "decode.loss_seg": 0.3065, "decode.acc_seg": 85.09171, "src.loss_imnet_feat_dist": 0.12962, "mix.decode.loss_seg": 0.23329, "mix.decode.acc_seg": 76.94687, "consistency.decode.loss_seg": 0.0003, "consistency.decode.acc_seg": 81.85642, "time": 1.33123}
{"mode": "train", "epoch": 1, "iter": 1450, "lr": 6e-05, "memory": 9812, "data_time": 0.0199, "decode.loss_seg": 0.30491, "decode.acc_seg": 86.05943, "src.loss_imnet_feat_dist": 0.12829, "mix.decode.loss_seg": 0.18655, "mix.decode.acc_seg": 78.27454, "consistency.decode.loss_seg": 0.00034, "consistency.decode.acc_seg": 80.53133, "time": 1.31919}
{"mode": "train", "epoch": 1, "iter": 1500, "lr": 6e-05, "memory": 9812, "data_time": 0.0198, "decode.loss_seg": 0.3007, "decode.acc_seg": 85.56367, "src.loss_imnet_feat_dist": 0.1338, "mix.decode.loss_seg": 0.2482, "mix.decode.acc_seg": 76.44498, "consistency.decode.loss_seg": 0.00029, "consistency.decode.acc_seg": 79.06829, "time": 1.31951}
{"mode": "train", "epoch": 1, "iter": 1550, "lr": 6e-05, "memory": 9812, "data_time": 0.01974, "decode.loss_seg": 0.30289, "decode.acc_seg": 86.10722, "src.loss_imnet_feat_dist": 0.12566, "mix.decode.loss_seg": 0.21294, "mix.decode.acc_seg": 76.49109, "consistency.decode.loss_seg": 0.00044, "consistency.decode.acc_seg": 78.85824, "time": 1.32655}
{"mode": "train", "epoch": 1, "iter": 1600, "lr": 6e-05, "memory": 9812, "data_time": 0.01954, "decode.loss_seg": 0.30377, "decode.acc_seg": 85.36673, "src.loss_imnet_feat_dist": 0.13214, "mix.decode.loss_seg": 0.20973, "mix.decode.acc_seg": 77.76555, "consistency.decode.loss_seg": 0.00051, "consistency.decode.acc_seg": 82.39548, "time": 1.31909}
{"mode": "train", "epoch": 1, "iter": 1650, "lr": 6e-05, "memory": 9812, "data_time": 0.01945, "decode.loss_seg": 0.28546, "decode.acc_seg": 86.22363, "src.loss_imnet_feat_dist": 0.13222, "mix.decode.loss_seg": 0.19979, "mix.decode.acc_seg": 79.20624, "consistency.decode.loss_seg": 0.00095, "consistency.decode.acc_seg": 84.36002, "time": 1.3176}
{"mode": "train", "epoch": 1, "iter": 1700, "lr": 6e-05, "memory": 9812, "data_time": 0.01961, "decode.loss_seg": 0.27867, "decode.acc_seg": 85.69258, "src.loss_imnet_feat_dist": 0.12937, "mix.decode.loss_seg": 0.20505, "mix.decode.acc_seg": 78.47659, "consistency.decode.loss_seg": 0.00077, "consistency.decode.acc_seg": 84.34486, "time": 1.31839}
{"mode": "train", "epoch": 1, "iter": 1750, "lr": 6e-05, "memory": 9812, "data_time": 0.01959, "decode.loss_seg": 0.24695, "decode.acc_seg": 85.8577, "src.loss_imnet_feat_dist": 0.12938, "mix.decode.loss_seg": 0.17665, "mix.decode.acc_seg": 80.11087, "consistency.decode.loss_seg": 0.00088, "consistency.decode.acc_seg": 84.88579, "time": 1.31684}
{"mode": "train", "epoch": 1, "iter": 1800, "lr": 6e-05, "memory": 9812, "data_time": 0.01959, "decode.loss_seg": 0.27321, "decode.acc_seg": 86.79991, "src.loss_imnet_feat_dist": 0.12807, "mix.decode.loss_seg": 0.22945, "mix.decode.acc_seg": 79.31526, "consistency.decode.loss_seg": 0.00105, "consistency.decode.acc_seg": 83.19461, "time": 1.31908}
{"mode": "train", "epoch": 1, "iter": 1850, "lr": 6e-05, "memory": 9812, "data_time": 0.0191, "decode.loss_seg": 0.2531, "decode.acc_seg": 86.90903, "src.loss_imnet_feat_dist": 0.12522, "mix.decode.loss_seg": 0.20386, "mix.decode.acc_seg": 80.89895, "consistency.decode.loss_seg": 0.00143, "consistency.decode.acc_seg": 84.70464, "time": 1.31733}
{"mode": "train", "epoch": 1, "iter": 1900, "lr": 6e-05, "memory": 9812, "data_time": 0.01938, "decode.loss_seg": 0.26174, "decode.acc_seg": 85.96468, "src.loss_imnet_feat_dist": 0.12395, "mix.decode.loss_seg": 0.19534, "mix.decode.acc_seg": 80.2444, "consistency.decode.loss_seg": 0.00425, "consistency.decode.acc_seg": 82.9353, "time": 1.3157}
{"mode": "train", "epoch": 1, "iter": 1950, "lr": 6e-05, "memory": 9812, "data_time": 0.01919, "decode.loss_seg": 0.25626, "decode.acc_seg": 85.45889, "src.loss_imnet_feat_dist": 0.1341, "mix.decode.loss_seg": 0.22801, "mix.decode.acc_seg": 80.10703, "consistency.decode.loss_seg": 0.00214, "consistency.decode.acc_seg": 84.92302, "time": 1.31744}
{"mode": "train", "epoch": 1, "iter": 2000, "lr": 6e-05, "memory": 9812, "data_time": 0.01926, "decode.loss_seg": 0.2473, "decode.acc_seg": 87.73054, "src.loss_imnet_feat_dist": 0.13398, "mix.decode.loss_seg": 0.22557, "mix.decode.acc_seg": 80.43283, "consistency.decode.loss_seg": 0.00211, "consistency.decode.acc_seg": 82.48013, "time": 1.31799}
{"mode": "train", "epoch": 1, "iter": 2050, "lr": 6e-05, "memory": 9812, "data_time": 0.01919, "decode.loss_seg": 0.25006, "decode.acc_seg": 86.76821, "src.loss_imnet_feat_dist": 0.12208, "mix.decode.loss_seg": 0.22143, "mix.decode.acc_seg": 81.90791, "consistency.decode.loss_seg": 0.00262, "consistency.decode.acc_seg": 83.52012, "time": 1.34273}
{"mode": "train", "epoch": 1, "iter": 2100, "lr": 6e-05, "memory": 9812, "data_time": 0.01913, "decode.loss_seg": 0.27674, "decode.acc_seg": 86.06242, "src.loss_imnet_feat_dist": 0.13439, "mix.decode.loss_seg": 0.22762, "mix.decode.acc_seg": 81.64579, "consistency.decode.loss_seg": 0.00381, "consistency.decode.acc_seg": 85.19413, "time": 1.31643}
{"mode": "train", "epoch": 1, "iter": 2150, "lr": 6e-05, "memory": 9812, "data_time": 0.01926, "decode.loss_seg": 0.26498, "decode.acc_seg": 87.31395, "src.loss_imnet_feat_dist": 0.12933, "mix.decode.loss_seg": 0.23009, "mix.decode.acc_seg": 81.69004, "consistency.decode.loss_seg": 0.00322, "consistency.decode.acc_seg": 85.22692, "time": 1.31826}
{"mode": "train", "epoch": 1, "iter": 2200, "lr": 6e-05, "memory": 9812, "data_time": 0.01909, "decode.loss_seg": 0.25494, "decode.acc_seg": 86.69392, "src.loss_imnet_feat_dist": 0.13344, "mix.decode.loss_seg": 0.24544, "mix.decode.acc_seg": 81.11986, "consistency.decode.loss_seg": 0.00262, "consistency.decode.acc_seg": 86.80844, "time": 1.31703}
{"mode": "train", "epoch": 1, "iter": 2250, "lr": 6e-05, "memory": 9812, "data_time": 0.01907, "decode.loss_seg": 0.21741, "decode.acc_seg": 88.46133, "src.loss_imnet_feat_dist": 0.12508, "mix.decode.loss_seg": 0.19363, "mix.decode.acc_seg": 83.31651, "consistency.decode.loss_seg": 0.00169, "consistency.decode.acc_seg": 87.20805, "time": 1.31728}
{"mode": "train", "epoch": 1, "iter": 2300, "lr": 6e-05, "memory": 9812, "data_time": 0.01905, "decode.loss_seg": 0.32222, "decode.acc_seg": 86.06205, "src.loss_imnet_feat_dist": 0.13126, "mix.decode.loss_seg": 0.28472, "mix.decode.acc_seg": 81.11832, "consistency.decode.loss_seg": 0.00568, "consistency.decode.acc_seg": 84.36777, "time": 1.31658}
{"mode": "train", "epoch": 1, "iter": 2350, "lr": 6e-05, "memory": 9812, "data_time": 0.01924, "decode.loss_seg": 0.2485, "decode.acc_seg": 87.19149, "src.loss_imnet_feat_dist": 0.13005, "mix.decode.loss_seg": 0.24554, "mix.decode.acc_seg": 81.24132, "consistency.decode.loss_seg": 0.00301, "consistency.decode.acc_seg": 85.70795, "time": 1.31814}
{"mode": "train", "epoch": 1, "iter": 2400, "lr": 6e-05, "memory": 9812, "data_time": 0.02014, "decode.loss_seg": 0.2402, "decode.acc_seg": 87.23685, "src.loss_imnet_feat_dist": 0.12986, "mix.decode.loss_seg": 0.21208, "mix.decode.acc_seg": 84.15893, "consistency.decode.loss_seg": 0.00269, "consistency.decode.acc_seg": 87.42872, "time": 1.31958}
{"mode": "train", "epoch": 1, "iter": 2450, "lr": 6e-05, "memory": 9812, "data_time": 0.01936, "decode.loss_seg": 0.24518, "decode.acc_seg": 86.81549, "src.loss_imnet_feat_dist": NaN, "mix.decode.loss_seg": 0.21383, "mix.decode.acc_seg": 82.86018, "consistency.decode.loss_seg": 0.00223, "consistency.decode.acc_seg": 87.84653, "time": 1.31798}
{"mode": "train", "epoch": 1, "iter": 2500, "lr": 6e-05, "memory": 9812, "data_time": 0.01929, "decode.loss_seg": 0.21603, "decode.acc_seg": 88.06835, "src.loss_imnet_feat_dist": 0.12817, "mix.decode.loss_seg": 0.19701, "mix.decode.acc_seg": 84.02814, "consistency.decode.loss_seg": 0.00159, "consistency.decode.acc_seg": 88.76859, "time": 1.31862}
{"mode": "train", "epoch": 1, "iter": 2550, "lr": 6e-05, "memory": 9812, "data_time": 0.0192, "decode.loss_seg": 0.21838, "decode.acc_seg": 87.25233, "src.loss_imnet_feat_dist": 0.12062, "mix.decode.loss_seg": 0.23945, "mix.decode.acc_seg": 82.29844, "consistency.decode.loss_seg": 0.00326, "consistency.decode.acc_seg": 87.65506, "time": 1.3185}
{"mode": "train", "epoch": 1, "iter": 2600, "lr": 6e-05, "memory": 9812, "data_time": 0.01956, "decode.loss_seg": 0.21535, "decode.acc_seg": 87.60445, "src.loss_imnet_feat_dist": 0.12601, "mix.decode.loss_seg": 0.21169, "mix.decode.acc_seg": 83.4312, "consistency.decode.loss_seg": 0.00294, "consistency.decode.acc_seg": 88.02295, "time": 1.32113}
{"mode": "train", "epoch": 1, "iter": 2650, "lr": 6e-05, "memory": 9812, "data_time": 0.01953, "decode.loss_seg": 0.29707, "decode.acc_seg": 86.52453, "src.loss_imnet_feat_dist": 0.13358, "mix.decode.loss_seg": 0.31386, "mix.decode.acc_seg": 81.42046, "consistency.decode.loss_seg": 0.006, "consistency.decode.acc_seg": 85.63227, "time": 1.31864}
{"mode": "train", "epoch": 1, "iter": 2700, "lr": 6e-05, "memory": 9812, "data_time": 0.0193, "decode.loss_seg": 0.23767, "decode.acc_seg": 86.83974, "src.loss_imnet_feat_dist": 0.12607, "mix.decode.loss_seg": 0.21829, "mix.decode.acc_seg": 83.65257, "consistency.decode.loss_seg": 0.00296, "consistency.decode.acc_seg": 87.94718, "time": 1.31682}
{"mode": "train", "epoch": 1, "iter": 2750, "lr": 6e-05, "memory": 9812, "data_time": 0.01942, "decode.loss_seg": 0.20492, "decode.acc_seg": 87.61479, "src.loss_imnet_feat_dist": 0.12907, "mix.decode.loss_seg": 0.20566, "mix.decode.acc_seg": 84.96824, "consistency.decode.loss_seg": 0.00306, "consistency.decode.acc_seg": 89.62721, "time": 1.31927}
{"mode": "train", "epoch": 1, "iter": 2800, "lr": 6e-05, "memory": 9812, "data_time": 0.01918, "decode.loss_seg": 0.24333, "decode.acc_seg": 87.46746, "src.loss_imnet_feat_dist": 0.14034, "mix.decode.loss_seg": 0.22789, "mix.decode.acc_seg": 83.11193, "consistency.decode.loss_seg": 0.00494, "consistency.decode.acc_seg": 87.33267, "time": 1.31867}
{"mode": "train", "epoch": 1, "iter": 2850, "lr": 6e-05, "memory": 9812, "data_time": 0.01908, "decode.loss_seg": 0.22501, "decode.acc_seg": 87.49841, "src.loss_imnet_feat_dist": 0.12889, "mix.decode.loss_seg": 0.2161, "mix.decode.acc_seg": 84.37846, "consistency.decode.loss_seg": 0.00217, "consistency.decode.acc_seg": 90.0776, "time": 1.31728}
{"mode": "train", "epoch": 1, "iter": 2900, "lr": 6e-05, "memory": 9812, "data_time": 0.01931, "decode.loss_seg": 0.2171, "decode.acc_seg": 87.67744, "src.loss_imnet_feat_dist": 0.12978, "mix.decode.loss_seg": 0.20327, "mix.decode.acc_seg": 84.75216, "consistency.decode.loss_seg": 0.00363, "consistency.decode.acc_seg": 89.45327, "time": 1.3199}
{"mode": "train", "epoch": 1, "iter": 2950, "lr": 6e-05, "memory": 9812, "data_time": 0.01922, "decode.loss_seg": 0.18644, "decode.acc_seg": 88.79436, "src.loss_imnet_feat_dist": 0.11999, "mix.decode.loss_seg": 0.18569, "mix.decode.acc_seg": 85.56029, "consistency.decode.loss_seg": 0.00296, "consistency.decode.acc_seg": 89.4695, "time": 1.31763}
{"mode": "train", "epoch": 1, "iter": 3000, "lr": 6e-05, "memory": 9812, "data_time": 0.01932, "decode.loss_seg": 0.2124, "decode.acc_seg": 88.49668, "src.loss_imnet_feat_dist": 0.13146, "mix.decode.loss_seg": 0.2115, "mix.decode.acc_seg": 86.00378, "consistency.decode.loss_seg": 0.00292, "consistency.decode.acc_seg": 90.12738, "time": 1.31783}
{"mode": "train", "epoch": 1, "iter": 3050, "lr": 6e-05, "memory": 9812, "data_time": 0.01957, "decode.loss_seg": 0.20746, "decode.acc_seg": 88.35345, "src.loss_imnet_feat_dist": 0.12169, "mix.decode.loss_seg": 0.19537, "mix.decode.acc_seg": 85.16114, "consistency.decode.loss_seg": 0.00446, "consistency.decode.acc_seg": 88.69984, "time": 1.35321}
{"mode": "train", "epoch": 1, "iter": 3100, "lr": 6e-05, "memory": 9812, "data_time": 0.01959, "decode.loss_seg": 0.21531, "decode.acc_seg": 87.78089, "src.loss_imnet_feat_dist": 0.12088, "mix.decode.loss_seg": 0.23425, "mix.decode.acc_seg": 85.45288, "consistency.decode.loss_seg": 0.00417, "consistency.decode.acc_seg": 88.93447, "time": 1.31673}
{"mode": "train", "epoch": 1, "iter": 3150, "lr": 6e-05, "memory": 9812, "data_time": 0.01967, "decode.loss_seg": 0.19746, "decode.acc_seg": 89.32428, "src.loss_imnet_feat_dist": 0.12653, "mix.decode.loss_seg": 0.20768, "mix.decode.acc_seg": 85.1815, "consistency.decode.loss_seg": 0.00611, "consistency.decode.acc_seg": 88.85142, "time": 1.31797}
{"mode": "train", "epoch": 1, "iter": 3200, "lr": 6e-05, "memory": 9812, "data_time": 0.01969, "decode.loss_seg": 0.19688, "decode.acc_seg": 88.55605, "src.loss_imnet_feat_dist": 0.12499, "mix.decode.loss_seg": 0.18282, "mix.decode.acc_seg": 86.31182, "consistency.decode.loss_seg": 0.00382, "consistency.decode.acc_seg": 90.3567, "time": 1.3183}
{"mode": "train", "epoch": 1, "iter": 3250, "lr": 6e-05, "memory": 9812, "data_time": 0.01979, "decode.loss_seg": 0.18957, "decode.acc_seg": 88.13828, "src.loss_imnet_feat_dist": 0.1262, "mix.decode.loss_seg": 0.21002, "mix.decode.acc_seg": 85.10249, "consistency.decode.loss_seg": 0.00439, "consistency.decode.acc_seg": 88.61288, "time": 1.32072}
{"mode": "train", "epoch": 1, "iter": 3300, "lr": 6e-05, "memory": 9812, "data_time": 0.0197, "decode.loss_seg": 0.19012, "decode.acc_seg": 89.18724, "src.loss_imnet_feat_dist": 0.12301, "mix.decode.loss_seg": 0.20557, "mix.decode.acc_seg": 85.77385, "consistency.decode.loss_seg": 0.0034, "consistency.decode.acc_seg": 90.56721, "time": 1.31863}
{"mode": "train", "epoch": 1, "iter": 3350, "lr": 5e-05, "memory": 9812, "data_time": 0.01955, "decode.loss_seg": 0.18956, "decode.acc_seg": 87.88953, "src.loss_imnet_feat_dist": 0.11665, "mix.decode.loss_seg": 0.19761, "mix.decode.acc_seg": 85.67357, "consistency.decode.loss_seg": 0.00259, "consistency.decode.acc_seg": 90.83417, "time": 1.31839}
{"mode": "train", "epoch": 1, "iter": 3400, "lr": 5e-05, "memory": 9812, "data_time": 0.01973, "decode.loss_seg": 0.19966, "decode.acc_seg": 88.47009, "src.loss_imnet_feat_dist": 0.12163, "mix.decode.loss_seg": 0.24667, "mix.decode.acc_seg": 84.69246, "consistency.decode.loss_seg": 0.004, "consistency.decode.acc_seg": 89.77381, "time": 1.32112}
{"mode": "train", "epoch": 1, "iter": 3450, "lr": 5e-05, "memory": 9812, "data_time": 0.01975, "decode.loss_seg": 0.19736, "decode.acc_seg": 88.63001, "src.loss_imnet_feat_dist": 0.1257, "mix.decode.loss_seg": 0.20687, "mix.decode.acc_seg": 87.04062, "consistency.decode.loss_seg": 0.00319, "consistency.decode.acc_seg": 91.16867, "time": 1.31854}
{"mode": "train", "epoch": 1, "iter": 3500, "lr": 5e-05, "memory": 9812, "data_time": 0.01971, "decode.loss_seg": 0.18764, "decode.acc_seg": 88.97679, "src.loss_imnet_feat_dist": 0.12563, "mix.decode.loss_seg": 0.19344, "mix.decode.acc_seg": 87.44758, "consistency.decode.loss_seg": 0.00401, "consistency.decode.acc_seg": 91.85857, "time": 1.31708}
{"mode": "train", "epoch": 1, "iter": 3550, "lr": 5e-05, "memory": 9812, "data_time": 0.01952, "decode.loss_seg": 0.20059, "decode.acc_seg": 88.20267, "src.loss_imnet_feat_dist": 0.13012, "mix.decode.loss_seg": 0.21216, "mix.decode.acc_seg": 86.32199, "consistency.decode.loss_seg": 0.00309, "consistency.decode.acc_seg": 91.2909, "time": 1.31703}
{"mode": "train", "epoch": 1, "iter": 3600, "lr": 5e-05, "memory": 9812, "data_time": 0.0209, "decode.loss_seg": 0.20796, "decode.acc_seg": 87.24414, "src.loss_imnet_feat_dist": 0.13243, "mix.decode.loss_seg": 0.27656, "mix.decode.acc_seg": 84.59366, "consistency.decode.loss_seg": 0.00854, "consistency.decode.acc_seg": 90.86391, "time": 1.32439}
{"mode": "train", "epoch": 1, "iter": 3650, "lr": 5e-05, "memory": 9812, "data_time": 0.02093, "decode.loss_seg": 0.19055, "decode.acc_seg": 88.69185, "src.loss_imnet_feat_dist": 0.11909, "mix.decode.loss_seg": 0.21302, "mix.decode.acc_seg": 86.09604, "consistency.decode.loss_seg": 0.00507, "consistency.decode.acc_seg": 90.21685, "time": 1.32351}
